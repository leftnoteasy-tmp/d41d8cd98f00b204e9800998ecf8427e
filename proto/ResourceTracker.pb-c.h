/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_ResourceTracker_2eproto__INCLUDED
#define PROTOBUF_C_ResourceTracker_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "yarn_server_common_service_protos.pb-c.h"



/* --- enums --- */


/* --- messages --- */

/* --- per-message closures --- */


/* --- services --- */

typedef struct _ResourceTrackerService_Service ResourceTrackerService_Service;
struct _ResourceTrackerService_Service
{
  ProtobufCService base;
  void (*register_node_manager)(ResourceTrackerService_Service *service,
                                const RegisterNodeManagerRequestProto *input,
                                RegisterNodeManagerResponseProto_Closure closure,
                                void *closure_data);
  void (*node_heartbeat)(ResourceTrackerService_Service *service,
                         const NodeHeartbeatRequestProto *input,
                         NodeHeartbeatResponseProto_Closure closure,
                         void *closure_data);
};
typedef void (*ResourceTrackerService_ServiceDestroy)(ResourceTrackerService_Service *);
void resource_tracker_service__init (ResourceTrackerService_Service *service,
                                     ResourceTrackerService_ServiceDestroy destroy);
#define RESOURCE_TRACKER_SERVICE__BASE_INIT \
    { &resource_tracker_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define RESOURCE_TRACKER_SERVICE__INIT(function_prefix__) \
    { RESOURCE_TRACKER_SERVICE__BASE_INIT,\
      function_prefix__ ## register_node_manager,\
      function_prefix__ ## node_heartbeat  }
void resource_tracker_service__register_node_manager(ProtobufCService *service,
                                                     const RegisterNodeManagerRequestProto *input,
                                                     RegisterNodeManagerResponseProto_Closure closure,
                                                     void *closure_data);
void resource_tracker_service__node_heartbeat(ProtobufCService *service,
                                              const NodeHeartbeatRequestProto *input,
                                              NodeHeartbeatResponseProto_Closure closure,
                                              void *closure_data);

/* --- descriptors --- */

extern const ProtobufCServiceDescriptor resource_tracker_service__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_ResourceTracker_2eproto__INCLUDED */
