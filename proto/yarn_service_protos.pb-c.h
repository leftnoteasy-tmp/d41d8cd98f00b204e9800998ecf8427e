/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_yarn_5fservice_5fprotos_2eproto__INCLUDED
#define PROTOBUF_C_yarn_5fservice_5fprotos_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "Security.pb-c.h"
#include "yarn_protos.pb-c.h"

typedef struct _RegisterApplicationMasterRequestProto RegisterApplicationMasterRequestProto;
typedef struct _RegisterApplicationMasterResponseProto RegisterApplicationMasterResponseProto;
typedef struct _FinishApplicationMasterRequestProto FinishApplicationMasterRequestProto;
typedef struct _FinishApplicationMasterResponseProto FinishApplicationMasterResponseProto;
typedef struct _AllocateRequestProto AllocateRequestProto;
typedef struct _NMTokenProto NMTokenProto;
typedef struct _AllocateResponseProto AllocateResponseProto;
typedef struct _GetNewApplicationRequestProto GetNewApplicationRequestProto;
typedef struct _GetNewApplicationResponseProto GetNewApplicationResponseProto;
typedef struct _GetApplicationReportRequestProto GetApplicationReportRequestProto;
typedef struct _GetApplicationReportResponseProto GetApplicationReportResponseProto;
typedef struct _SubmitApplicationRequestProto SubmitApplicationRequestProto;
typedef struct _SubmitApplicationResponseProto SubmitApplicationResponseProto;
typedef struct _KillApplicationRequestProto KillApplicationRequestProto;
typedef struct _KillApplicationResponseProto KillApplicationResponseProto;
typedef struct _GetClusterMetricsRequestProto GetClusterMetricsRequestProto;
typedef struct _GetClusterMetricsResponseProto GetClusterMetricsResponseProto;
typedef struct _GetApplicationsRequestProto GetApplicationsRequestProto;
typedef struct _GetApplicationsResponseProto GetApplicationsResponseProto;
typedef struct _GetClusterNodesRequestProto GetClusterNodesRequestProto;
typedef struct _GetClusterNodesResponseProto GetClusterNodesResponseProto;
typedef struct _GetQueueInfoRequestProto GetQueueInfoRequestProto;
typedef struct _GetQueueInfoResponseProto GetQueueInfoResponseProto;
typedef struct _GetQueueUserAclsInfoRequestProto GetQueueUserAclsInfoRequestProto;
typedef struct _GetQueueUserAclsInfoResponseProto GetQueueUserAclsInfoResponseProto;
typedef struct _StartContainerRequestProto StartContainerRequestProto;
typedef struct _StartContainerResponseProto StartContainerResponseProto;
typedef struct _StopContainerRequestProto StopContainerRequestProto;
typedef struct _StopContainerResponseProto StopContainerResponseProto;
typedef struct _GetContainerStatusRequestProto GetContainerStatusRequestProto;
typedef struct _GetContainerStatusResponseProto GetContainerStatusResponseProto;
typedef struct _StartContainersRequestProto StartContainersRequestProto;
typedef struct _ContainerExceptionMapProto ContainerExceptionMapProto;
typedef struct _StartContainersResponseProto StartContainersResponseProto;
typedef struct _StopContainersRequestProto StopContainersRequestProto;
typedef struct _StopContainersResponseProto StopContainersResponseProto;
typedef struct _GetContainerStatusesRequestProto GetContainerStatusesRequestProto;
typedef struct _GetContainerStatusesResponseProto GetContainerStatusesResponseProto;


/* --- enums --- */


/* --- messages --- */

struct  _RegisterApplicationMasterRequestProto
{
  ProtobufCMessage base;
  char *host;
  protobuf_c_boolean has_rpc_port;
  int32_t rpc_port;
  char *tracking_url;
};
#define REGISTER_APPLICATION_MASTER_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&register_application_master_request_proto__descriptor) \
    , NULL, 0,0, NULL }


struct  _RegisterApplicationMasterResponseProto
{
  ProtobufCMessage base;
  ResourceProto *maximumcapability;
  protobuf_c_boolean has_client_to_am_token_master_key;
  ProtobufCBinaryData client_to_am_token_master_key;
  size_t n_application_acls;
  ApplicationACLMapProto **application_acls;
};
#define REGISTER_APPLICATION_MASTER_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&register_application_master_response_proto__descriptor) \
    , NULL, 0,{0,NULL}, 0,NULL }


struct  _FinishApplicationMasterRequestProto
{
  ProtobufCMessage base;
  char *diagnostics;
  char *tracking_url;
  protobuf_c_boolean has_final_application_status;
  FinalApplicationStatusProto final_application_status;
};
#define FINISH_APPLICATION_MASTER_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&finish_application_master_request_proto__descriptor) \
    , NULL, NULL, 0,0 }


struct  _FinishApplicationMasterResponseProto
{
  ProtobufCMessage base;
};
#define FINISH_APPLICATION_MASTER_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&finish_application_master_response_proto__descriptor) \
     }


struct  _AllocateRequestProto
{
  ProtobufCMessage base;
  size_t n_ask;
  ResourceRequestProto **ask;
  size_t n_release;
  ContainerIdProto **release;
  ResourceBlacklistRequestProto *blacklist_request;
  protobuf_c_boolean has_response_id;
  int32_t response_id;
  protobuf_c_boolean has_progress;
  float progress;
};
#define ALLOCATE_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&allocate_request_proto__descriptor) \
    , 0,NULL, 0,NULL, NULL, 0,0, 0,0 }


struct  _NMTokenProto
{
  ProtobufCMessage base;
  NodeIdProto *nodeid;
  Hadoop__Common__TokenProto *token;
};
#define NMTOKEN_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nmtoken_proto__descriptor) \
    , NULL, NULL }


struct  _AllocateResponseProto
{
  ProtobufCMessage base;
  protobuf_c_boolean has_a_m_command;
  AMCommandProto a_m_command;
  protobuf_c_boolean has_response_id;
  int32_t response_id;
  size_t n_allocated_containers;
  ContainerProto **allocated_containers;
  size_t n_completed_container_statuses;
  ContainerStatusProto **completed_container_statuses;
  ResourceProto *limit;
  size_t n_updated_nodes;
  NodeReportProto **updated_nodes;
  protobuf_c_boolean has_num_cluster_nodes;
  int32_t num_cluster_nodes;
  PreemptionMessageProto *preempt;
  size_t n_nm_tokens;
  NMTokenProto **nm_tokens;
};
#define ALLOCATE_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&allocate_response_proto__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,NULL, NULL, 0,NULL, 0,0, NULL, 0,NULL }


struct  _GetNewApplicationRequestProto
{
  ProtobufCMessage base;
};
#define GET_NEW_APPLICATION_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_new_application_request_proto__descriptor) \
     }


struct  _GetNewApplicationResponseProto
{
  ProtobufCMessage base;
  ApplicationIdProto *application_id;
  ResourceProto *maximumcapability;
};
#define GET_NEW_APPLICATION_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_new_application_response_proto__descriptor) \
    , NULL, NULL }


struct  _GetApplicationReportRequestProto
{
  ProtobufCMessage base;
  ApplicationIdProto *application_id;
};
#define GET_APPLICATION_REPORT_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_application_report_request_proto__descriptor) \
    , NULL }


struct  _GetApplicationReportResponseProto
{
  ProtobufCMessage base;
  ApplicationReportProto *application_report;
};
#define GET_APPLICATION_REPORT_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_application_report_response_proto__descriptor) \
    , NULL }


struct  _SubmitApplicationRequestProto
{
  ProtobufCMessage base;
  ApplicationSubmissionContextProto *application_submission_context;
};
#define SUBMIT_APPLICATION_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&submit_application_request_proto__descriptor) \
    , NULL }


struct  _SubmitApplicationResponseProto
{
  ProtobufCMessage base;
};
#define SUBMIT_APPLICATION_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&submit_application_response_proto__descriptor) \
     }


struct  _KillApplicationRequestProto
{
  ProtobufCMessage base;
  ApplicationIdProto *application_id;
};
#define KILL_APPLICATION_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kill_application_request_proto__descriptor) \
    , NULL }


struct  _KillApplicationResponseProto
{
  ProtobufCMessage base;
};
#define KILL_APPLICATION_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kill_application_response_proto__descriptor) \
     }


struct  _GetClusterMetricsRequestProto
{
  ProtobufCMessage base;
};
#define GET_CLUSTER_METRICS_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_cluster_metrics_request_proto__descriptor) \
     }


struct  _GetClusterMetricsResponseProto
{
  ProtobufCMessage base;
  YarnClusterMetricsProto *cluster_metrics;
};
#define GET_CLUSTER_METRICS_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_cluster_metrics_response_proto__descriptor) \
    , NULL }


struct  _GetApplicationsRequestProto
{
  ProtobufCMessage base;
  size_t n_application_types;
  char **application_types;
};
#define GET_APPLICATIONS_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_applications_request_proto__descriptor) \
    , 0,NULL }


struct  _GetApplicationsResponseProto
{
  ProtobufCMessage base;
  size_t n_applications;
  ApplicationReportProto **applications;
};
#define GET_APPLICATIONS_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_applications_response_proto__descriptor) \
    , 0,NULL }


struct  _GetClusterNodesRequestProto
{
  ProtobufCMessage base;
  size_t n_nodestates;
  NodeStateProto *nodestates;
};
#define GET_CLUSTER_NODES_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_cluster_nodes_request_proto__descriptor) \
    , 0,NULL }


struct  _GetClusterNodesResponseProto
{
  ProtobufCMessage base;
  size_t n_nodereports;
  NodeReportProto **nodereports;
};
#define GET_CLUSTER_NODES_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_cluster_nodes_response_proto__descriptor) \
    , 0,NULL }


struct  _GetQueueInfoRequestProto
{
  ProtobufCMessage base;
  char *queuename;
  protobuf_c_boolean has_includeapplications;
  protobuf_c_boolean includeapplications;
  protobuf_c_boolean has_includechildqueues;
  protobuf_c_boolean includechildqueues;
  protobuf_c_boolean has_recursive;
  protobuf_c_boolean recursive;
};
#define GET_QUEUE_INFO_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_queue_info_request_proto__descriptor) \
    , NULL, 0,0, 0,0, 0,0 }


struct  _GetQueueInfoResponseProto
{
  ProtobufCMessage base;
  QueueInfoProto *queueinfo;
};
#define GET_QUEUE_INFO_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_queue_info_response_proto__descriptor) \
    , NULL }


struct  _GetQueueUserAclsInfoRequestProto
{
  ProtobufCMessage base;
};
#define GET_QUEUE_USER_ACLS_INFO_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_queue_user_acls_info_request_proto__descriptor) \
     }


struct  _GetQueueUserAclsInfoResponseProto
{
  ProtobufCMessage base;
  size_t n_queueuseracls;
  QueueUserACLInfoProto **queueuseracls;
};
#define GET_QUEUE_USER_ACLS_INFO_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_queue_user_acls_info_response_proto__descriptor) \
    , 0,NULL }


struct  _StartContainerRequestProto
{
  ProtobufCMessage base;
  ContainerLaunchContextProto *container_launch_context;
  Hadoop__Common__TokenProto *container_token;
};
#define START_CONTAINER_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&start_container_request_proto__descriptor) \
    , NULL, NULL }


struct  _StartContainerResponseProto
{
  ProtobufCMessage base;
  size_t n_services_meta_data;
  StringBytesMapProto **services_meta_data;
};
#define START_CONTAINER_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&start_container_response_proto__descriptor) \
    , 0,NULL }


struct  _StopContainerRequestProto
{
  ProtobufCMessage base;
  ContainerIdProto *container_id;
};
#define STOP_CONTAINER_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stop_container_request_proto__descriptor) \
    , NULL }


struct  _StopContainerResponseProto
{
  ProtobufCMessage base;
};
#define STOP_CONTAINER_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stop_container_response_proto__descriptor) \
     }


struct  _GetContainerStatusRequestProto
{
  ProtobufCMessage base;
  ContainerIdProto *container_id;
};
#define GET_CONTAINER_STATUS_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_container_status_request_proto__descriptor) \
    , NULL }


struct  _GetContainerStatusResponseProto
{
  ProtobufCMessage base;
  ContainerStatusProto *status;
};
#define GET_CONTAINER_STATUS_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_container_status_response_proto__descriptor) \
    , NULL }


struct  _StartContainersRequestProto
{
  ProtobufCMessage base;
  size_t n_start_container_request;
  StartContainerRequestProto **start_container_request;
};
#define START_CONTAINERS_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&start_containers_request_proto__descriptor) \
    , 0,NULL }


struct  _ContainerExceptionMapProto
{
  ProtobufCMessage base;
  ContainerIdProto *container_id;
  SerializedExceptionProto *exception;
};
#define CONTAINER_EXCEPTION_MAP_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&container_exception_map_proto__descriptor) \
    , NULL, NULL }


struct  _StartContainersResponseProto
{
  ProtobufCMessage base;
  size_t n_services_meta_data;
  StringBytesMapProto **services_meta_data;
  size_t n_succeeded_requests;
  ContainerIdProto **succeeded_requests;
  size_t n_failed_requests;
  ContainerExceptionMapProto **failed_requests;
};
#define START_CONTAINERS_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&start_containers_response_proto__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL }


struct  _StopContainersRequestProto
{
  ProtobufCMessage base;
  size_t n_container_id;
  ContainerIdProto **container_id;
};
#define STOP_CONTAINERS_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stop_containers_request_proto__descriptor) \
    , 0,NULL }


struct  _StopContainersResponseProto
{
  ProtobufCMessage base;
  size_t n_succeeded_requests;
  ContainerIdProto **succeeded_requests;
  size_t n_failed_requests;
  ContainerExceptionMapProto **failed_requests;
};
#define STOP_CONTAINERS_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stop_containers_response_proto__descriptor) \
    , 0,NULL, 0,NULL }


struct  _GetContainerStatusesRequestProto
{
  ProtobufCMessage base;
  size_t n_container_id;
  ContainerIdProto **container_id;
};
#define GET_CONTAINER_STATUSES_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_container_statuses_request_proto__descriptor) \
    , 0,NULL }


struct  _GetContainerStatusesResponseProto
{
  ProtobufCMessage base;
  size_t n_status;
  ContainerStatusProto **status;
  size_t n_failed_requests;
  ContainerExceptionMapProto **failed_requests;
};
#define GET_CONTAINER_STATUSES_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_container_statuses_response_proto__descriptor) \
    , 0,NULL, 0,NULL }


/* RegisterApplicationMasterRequestProto methods */
void   register_application_master_request_proto__init
                     (RegisterApplicationMasterRequestProto         *message);
size_t register_application_master_request_proto__get_packed_size
                     (const RegisterApplicationMasterRequestProto   *message);
size_t register_application_master_request_proto__pack
                     (const RegisterApplicationMasterRequestProto   *message,
                      uint8_t             *out);
size_t register_application_master_request_proto__pack_to_buffer
                     (const RegisterApplicationMasterRequestProto   *message,
                      ProtobufCBuffer     *buffer);
RegisterApplicationMasterRequestProto *
       register_application_master_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   register_application_master_request_proto__free_unpacked
                     (RegisterApplicationMasterRequestProto *message,
                      ProtobufCAllocator *allocator);
/* RegisterApplicationMasterResponseProto methods */
void   register_application_master_response_proto__init
                     (RegisterApplicationMasterResponseProto         *message);
size_t register_application_master_response_proto__get_packed_size
                     (const RegisterApplicationMasterResponseProto   *message);
size_t register_application_master_response_proto__pack
                     (const RegisterApplicationMasterResponseProto   *message,
                      uint8_t             *out);
size_t register_application_master_response_proto__pack_to_buffer
                     (const RegisterApplicationMasterResponseProto   *message,
                      ProtobufCBuffer     *buffer);
RegisterApplicationMasterResponseProto *
       register_application_master_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   register_application_master_response_proto__free_unpacked
                     (RegisterApplicationMasterResponseProto *message,
                      ProtobufCAllocator *allocator);
/* FinishApplicationMasterRequestProto methods */
void   finish_application_master_request_proto__init
                     (FinishApplicationMasterRequestProto         *message);
size_t finish_application_master_request_proto__get_packed_size
                     (const FinishApplicationMasterRequestProto   *message);
size_t finish_application_master_request_proto__pack
                     (const FinishApplicationMasterRequestProto   *message,
                      uint8_t             *out);
size_t finish_application_master_request_proto__pack_to_buffer
                     (const FinishApplicationMasterRequestProto   *message,
                      ProtobufCBuffer     *buffer);
FinishApplicationMasterRequestProto *
       finish_application_master_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   finish_application_master_request_proto__free_unpacked
                     (FinishApplicationMasterRequestProto *message,
                      ProtobufCAllocator *allocator);
/* FinishApplicationMasterResponseProto methods */
void   finish_application_master_response_proto__init
                     (FinishApplicationMasterResponseProto         *message);
size_t finish_application_master_response_proto__get_packed_size
                     (const FinishApplicationMasterResponseProto   *message);
size_t finish_application_master_response_proto__pack
                     (const FinishApplicationMasterResponseProto   *message,
                      uint8_t             *out);
size_t finish_application_master_response_proto__pack_to_buffer
                     (const FinishApplicationMasterResponseProto   *message,
                      ProtobufCBuffer     *buffer);
FinishApplicationMasterResponseProto *
       finish_application_master_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   finish_application_master_response_proto__free_unpacked
                     (FinishApplicationMasterResponseProto *message,
                      ProtobufCAllocator *allocator);
/* AllocateRequestProto methods */
void   allocate_request_proto__init
                     (AllocateRequestProto         *message);
size_t allocate_request_proto__get_packed_size
                     (const AllocateRequestProto   *message);
size_t allocate_request_proto__pack
                     (const AllocateRequestProto   *message,
                      uint8_t             *out);
size_t allocate_request_proto__pack_to_buffer
                     (const AllocateRequestProto   *message,
                      ProtobufCBuffer     *buffer);
AllocateRequestProto *
       allocate_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   allocate_request_proto__free_unpacked
                     (AllocateRequestProto *message,
                      ProtobufCAllocator *allocator);
/* NMTokenProto methods */
void   nmtoken_proto__init
                     (NMTokenProto         *message);
size_t nmtoken_proto__get_packed_size
                     (const NMTokenProto   *message);
size_t nmtoken_proto__pack
                     (const NMTokenProto   *message,
                      uint8_t             *out);
size_t nmtoken_proto__pack_to_buffer
                     (const NMTokenProto   *message,
                      ProtobufCBuffer     *buffer);
NMTokenProto *
       nmtoken_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nmtoken_proto__free_unpacked
                     (NMTokenProto *message,
                      ProtobufCAllocator *allocator);
/* AllocateResponseProto methods */
void   allocate_response_proto__init
                     (AllocateResponseProto         *message);
size_t allocate_response_proto__get_packed_size
                     (const AllocateResponseProto   *message);
size_t allocate_response_proto__pack
                     (const AllocateResponseProto   *message,
                      uint8_t             *out);
size_t allocate_response_proto__pack_to_buffer
                     (const AllocateResponseProto   *message,
                      ProtobufCBuffer     *buffer);
AllocateResponseProto *
       allocate_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   allocate_response_proto__free_unpacked
                     (AllocateResponseProto *message,
                      ProtobufCAllocator *allocator);
/* GetNewApplicationRequestProto methods */
void   get_new_application_request_proto__init
                     (GetNewApplicationRequestProto         *message);
size_t get_new_application_request_proto__get_packed_size
                     (const GetNewApplicationRequestProto   *message);
size_t get_new_application_request_proto__pack
                     (const GetNewApplicationRequestProto   *message,
                      uint8_t             *out);
size_t get_new_application_request_proto__pack_to_buffer
                     (const GetNewApplicationRequestProto   *message,
                      ProtobufCBuffer     *buffer);
GetNewApplicationRequestProto *
       get_new_application_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_new_application_request_proto__free_unpacked
                     (GetNewApplicationRequestProto *message,
                      ProtobufCAllocator *allocator);
/* GetNewApplicationResponseProto methods */
void   get_new_application_response_proto__init
                     (GetNewApplicationResponseProto         *message);
size_t get_new_application_response_proto__get_packed_size
                     (const GetNewApplicationResponseProto   *message);
size_t get_new_application_response_proto__pack
                     (const GetNewApplicationResponseProto   *message,
                      uint8_t             *out);
size_t get_new_application_response_proto__pack_to_buffer
                     (const GetNewApplicationResponseProto   *message,
                      ProtobufCBuffer     *buffer);
GetNewApplicationResponseProto *
       get_new_application_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_new_application_response_proto__free_unpacked
                     (GetNewApplicationResponseProto *message,
                      ProtobufCAllocator *allocator);
/* GetApplicationReportRequestProto methods */
void   get_application_report_request_proto__init
                     (GetApplicationReportRequestProto         *message);
size_t get_application_report_request_proto__get_packed_size
                     (const GetApplicationReportRequestProto   *message);
size_t get_application_report_request_proto__pack
                     (const GetApplicationReportRequestProto   *message,
                      uint8_t             *out);
size_t get_application_report_request_proto__pack_to_buffer
                     (const GetApplicationReportRequestProto   *message,
                      ProtobufCBuffer     *buffer);
GetApplicationReportRequestProto *
       get_application_report_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_application_report_request_proto__free_unpacked
                     (GetApplicationReportRequestProto *message,
                      ProtobufCAllocator *allocator);
/* GetApplicationReportResponseProto methods */
void   get_application_report_response_proto__init
                     (GetApplicationReportResponseProto         *message);
size_t get_application_report_response_proto__get_packed_size
                     (const GetApplicationReportResponseProto   *message);
size_t get_application_report_response_proto__pack
                     (const GetApplicationReportResponseProto   *message,
                      uint8_t             *out);
size_t get_application_report_response_proto__pack_to_buffer
                     (const GetApplicationReportResponseProto   *message,
                      ProtobufCBuffer     *buffer);
GetApplicationReportResponseProto *
       get_application_report_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_application_report_response_proto__free_unpacked
                     (GetApplicationReportResponseProto *message,
                      ProtobufCAllocator *allocator);
/* SubmitApplicationRequestProto methods */
void   submit_application_request_proto__init
                     (SubmitApplicationRequestProto         *message);
size_t submit_application_request_proto__get_packed_size
                     (const SubmitApplicationRequestProto   *message);
size_t submit_application_request_proto__pack
                     (const SubmitApplicationRequestProto   *message,
                      uint8_t             *out);
size_t submit_application_request_proto__pack_to_buffer
                     (const SubmitApplicationRequestProto   *message,
                      ProtobufCBuffer     *buffer);
SubmitApplicationRequestProto *
       submit_application_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   submit_application_request_proto__free_unpacked
                     (SubmitApplicationRequestProto *message,
                      ProtobufCAllocator *allocator);
/* SubmitApplicationResponseProto methods */
void   submit_application_response_proto__init
                     (SubmitApplicationResponseProto         *message);
size_t submit_application_response_proto__get_packed_size
                     (const SubmitApplicationResponseProto   *message);
size_t submit_application_response_proto__pack
                     (const SubmitApplicationResponseProto   *message,
                      uint8_t             *out);
size_t submit_application_response_proto__pack_to_buffer
                     (const SubmitApplicationResponseProto   *message,
                      ProtobufCBuffer     *buffer);
SubmitApplicationResponseProto *
       submit_application_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   submit_application_response_proto__free_unpacked
                     (SubmitApplicationResponseProto *message,
                      ProtobufCAllocator *allocator);
/* KillApplicationRequestProto methods */
void   kill_application_request_proto__init
                     (KillApplicationRequestProto         *message);
size_t kill_application_request_proto__get_packed_size
                     (const KillApplicationRequestProto   *message);
size_t kill_application_request_proto__pack
                     (const KillApplicationRequestProto   *message,
                      uint8_t             *out);
size_t kill_application_request_proto__pack_to_buffer
                     (const KillApplicationRequestProto   *message,
                      ProtobufCBuffer     *buffer);
KillApplicationRequestProto *
       kill_application_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kill_application_request_proto__free_unpacked
                     (KillApplicationRequestProto *message,
                      ProtobufCAllocator *allocator);
/* KillApplicationResponseProto methods */
void   kill_application_response_proto__init
                     (KillApplicationResponseProto         *message);
size_t kill_application_response_proto__get_packed_size
                     (const KillApplicationResponseProto   *message);
size_t kill_application_response_proto__pack
                     (const KillApplicationResponseProto   *message,
                      uint8_t             *out);
size_t kill_application_response_proto__pack_to_buffer
                     (const KillApplicationResponseProto   *message,
                      ProtobufCBuffer     *buffer);
KillApplicationResponseProto *
       kill_application_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kill_application_response_proto__free_unpacked
                     (KillApplicationResponseProto *message,
                      ProtobufCAllocator *allocator);
/* GetClusterMetricsRequestProto methods */
void   get_cluster_metrics_request_proto__init
                     (GetClusterMetricsRequestProto         *message);
size_t get_cluster_metrics_request_proto__get_packed_size
                     (const GetClusterMetricsRequestProto   *message);
size_t get_cluster_metrics_request_proto__pack
                     (const GetClusterMetricsRequestProto   *message,
                      uint8_t             *out);
size_t get_cluster_metrics_request_proto__pack_to_buffer
                     (const GetClusterMetricsRequestProto   *message,
                      ProtobufCBuffer     *buffer);
GetClusterMetricsRequestProto *
       get_cluster_metrics_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_cluster_metrics_request_proto__free_unpacked
                     (GetClusterMetricsRequestProto *message,
                      ProtobufCAllocator *allocator);
/* GetClusterMetricsResponseProto methods */
void   get_cluster_metrics_response_proto__init
                     (GetClusterMetricsResponseProto         *message);
size_t get_cluster_metrics_response_proto__get_packed_size
                     (const GetClusterMetricsResponseProto   *message);
size_t get_cluster_metrics_response_proto__pack
                     (const GetClusterMetricsResponseProto   *message,
                      uint8_t             *out);
size_t get_cluster_metrics_response_proto__pack_to_buffer
                     (const GetClusterMetricsResponseProto   *message,
                      ProtobufCBuffer     *buffer);
GetClusterMetricsResponseProto *
       get_cluster_metrics_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_cluster_metrics_response_proto__free_unpacked
                     (GetClusterMetricsResponseProto *message,
                      ProtobufCAllocator *allocator);
/* GetApplicationsRequestProto methods */
void   get_applications_request_proto__init
                     (GetApplicationsRequestProto         *message);
size_t get_applications_request_proto__get_packed_size
                     (const GetApplicationsRequestProto   *message);
size_t get_applications_request_proto__pack
                     (const GetApplicationsRequestProto   *message,
                      uint8_t             *out);
size_t get_applications_request_proto__pack_to_buffer
                     (const GetApplicationsRequestProto   *message,
                      ProtobufCBuffer     *buffer);
GetApplicationsRequestProto *
       get_applications_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_applications_request_proto__free_unpacked
                     (GetApplicationsRequestProto *message,
                      ProtobufCAllocator *allocator);
/* GetApplicationsResponseProto methods */
void   get_applications_response_proto__init
                     (GetApplicationsResponseProto         *message);
size_t get_applications_response_proto__get_packed_size
                     (const GetApplicationsResponseProto   *message);
size_t get_applications_response_proto__pack
                     (const GetApplicationsResponseProto   *message,
                      uint8_t             *out);
size_t get_applications_response_proto__pack_to_buffer
                     (const GetApplicationsResponseProto   *message,
                      ProtobufCBuffer     *buffer);
GetApplicationsResponseProto *
       get_applications_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_applications_response_proto__free_unpacked
                     (GetApplicationsResponseProto *message,
                      ProtobufCAllocator *allocator);
/* GetClusterNodesRequestProto methods */
void   get_cluster_nodes_request_proto__init
                     (GetClusterNodesRequestProto         *message);
size_t get_cluster_nodes_request_proto__get_packed_size
                     (const GetClusterNodesRequestProto   *message);
size_t get_cluster_nodes_request_proto__pack
                     (const GetClusterNodesRequestProto   *message,
                      uint8_t             *out);
size_t get_cluster_nodes_request_proto__pack_to_buffer
                     (const GetClusterNodesRequestProto   *message,
                      ProtobufCBuffer     *buffer);
GetClusterNodesRequestProto *
       get_cluster_nodes_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_cluster_nodes_request_proto__free_unpacked
                     (GetClusterNodesRequestProto *message,
                      ProtobufCAllocator *allocator);
/* GetClusterNodesResponseProto methods */
void   get_cluster_nodes_response_proto__init
                     (GetClusterNodesResponseProto         *message);
size_t get_cluster_nodes_response_proto__get_packed_size
                     (const GetClusterNodesResponseProto   *message);
size_t get_cluster_nodes_response_proto__pack
                     (const GetClusterNodesResponseProto   *message,
                      uint8_t             *out);
size_t get_cluster_nodes_response_proto__pack_to_buffer
                     (const GetClusterNodesResponseProto   *message,
                      ProtobufCBuffer     *buffer);
GetClusterNodesResponseProto *
       get_cluster_nodes_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_cluster_nodes_response_proto__free_unpacked
                     (GetClusterNodesResponseProto *message,
                      ProtobufCAllocator *allocator);
/* GetQueueInfoRequestProto methods */
void   get_queue_info_request_proto__init
                     (GetQueueInfoRequestProto         *message);
size_t get_queue_info_request_proto__get_packed_size
                     (const GetQueueInfoRequestProto   *message);
size_t get_queue_info_request_proto__pack
                     (const GetQueueInfoRequestProto   *message,
                      uint8_t             *out);
size_t get_queue_info_request_proto__pack_to_buffer
                     (const GetQueueInfoRequestProto   *message,
                      ProtobufCBuffer     *buffer);
GetQueueInfoRequestProto *
       get_queue_info_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_queue_info_request_proto__free_unpacked
                     (GetQueueInfoRequestProto *message,
                      ProtobufCAllocator *allocator);
/* GetQueueInfoResponseProto methods */
void   get_queue_info_response_proto__init
                     (GetQueueInfoResponseProto         *message);
size_t get_queue_info_response_proto__get_packed_size
                     (const GetQueueInfoResponseProto   *message);
size_t get_queue_info_response_proto__pack
                     (const GetQueueInfoResponseProto   *message,
                      uint8_t             *out);
size_t get_queue_info_response_proto__pack_to_buffer
                     (const GetQueueInfoResponseProto   *message,
                      ProtobufCBuffer     *buffer);
GetQueueInfoResponseProto *
       get_queue_info_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_queue_info_response_proto__free_unpacked
                     (GetQueueInfoResponseProto *message,
                      ProtobufCAllocator *allocator);
/* GetQueueUserAclsInfoRequestProto methods */
void   get_queue_user_acls_info_request_proto__init
                     (GetQueueUserAclsInfoRequestProto         *message);
size_t get_queue_user_acls_info_request_proto__get_packed_size
                     (const GetQueueUserAclsInfoRequestProto   *message);
size_t get_queue_user_acls_info_request_proto__pack
                     (const GetQueueUserAclsInfoRequestProto   *message,
                      uint8_t             *out);
size_t get_queue_user_acls_info_request_proto__pack_to_buffer
                     (const GetQueueUserAclsInfoRequestProto   *message,
                      ProtobufCBuffer     *buffer);
GetQueueUserAclsInfoRequestProto *
       get_queue_user_acls_info_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_queue_user_acls_info_request_proto__free_unpacked
                     (GetQueueUserAclsInfoRequestProto *message,
                      ProtobufCAllocator *allocator);
/* GetQueueUserAclsInfoResponseProto methods */
void   get_queue_user_acls_info_response_proto__init
                     (GetQueueUserAclsInfoResponseProto         *message);
size_t get_queue_user_acls_info_response_proto__get_packed_size
                     (const GetQueueUserAclsInfoResponseProto   *message);
size_t get_queue_user_acls_info_response_proto__pack
                     (const GetQueueUserAclsInfoResponseProto   *message,
                      uint8_t             *out);
size_t get_queue_user_acls_info_response_proto__pack_to_buffer
                     (const GetQueueUserAclsInfoResponseProto   *message,
                      ProtobufCBuffer     *buffer);
GetQueueUserAclsInfoResponseProto *
       get_queue_user_acls_info_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_queue_user_acls_info_response_proto__free_unpacked
                     (GetQueueUserAclsInfoResponseProto *message,
                      ProtobufCAllocator *allocator);
/* StartContainerRequestProto methods */
void   start_container_request_proto__init
                     (StartContainerRequestProto         *message);
size_t start_container_request_proto__get_packed_size
                     (const StartContainerRequestProto   *message);
size_t start_container_request_proto__pack
                     (const StartContainerRequestProto   *message,
                      uint8_t             *out);
size_t start_container_request_proto__pack_to_buffer
                     (const StartContainerRequestProto   *message,
                      ProtobufCBuffer     *buffer);
StartContainerRequestProto *
       start_container_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   start_container_request_proto__free_unpacked
                     (StartContainerRequestProto *message,
                      ProtobufCAllocator *allocator);
/* StartContainerResponseProto methods */
void   start_container_response_proto__init
                     (StartContainerResponseProto         *message);
size_t start_container_response_proto__get_packed_size
                     (const StartContainerResponseProto   *message);
size_t start_container_response_proto__pack
                     (const StartContainerResponseProto   *message,
                      uint8_t             *out);
size_t start_container_response_proto__pack_to_buffer
                     (const StartContainerResponseProto   *message,
                      ProtobufCBuffer     *buffer);
StartContainerResponseProto *
       start_container_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   start_container_response_proto__free_unpacked
                     (StartContainerResponseProto *message,
                      ProtobufCAllocator *allocator);
/* StopContainerRequestProto methods */
void   stop_container_request_proto__init
                     (StopContainerRequestProto         *message);
size_t stop_container_request_proto__get_packed_size
                     (const StopContainerRequestProto   *message);
size_t stop_container_request_proto__pack
                     (const StopContainerRequestProto   *message,
                      uint8_t             *out);
size_t stop_container_request_proto__pack_to_buffer
                     (const StopContainerRequestProto   *message,
                      ProtobufCBuffer     *buffer);
StopContainerRequestProto *
       stop_container_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stop_container_request_proto__free_unpacked
                     (StopContainerRequestProto *message,
                      ProtobufCAllocator *allocator);
/* StopContainerResponseProto methods */
void   stop_container_response_proto__init
                     (StopContainerResponseProto         *message);
size_t stop_container_response_proto__get_packed_size
                     (const StopContainerResponseProto   *message);
size_t stop_container_response_proto__pack
                     (const StopContainerResponseProto   *message,
                      uint8_t             *out);
size_t stop_container_response_proto__pack_to_buffer
                     (const StopContainerResponseProto   *message,
                      ProtobufCBuffer     *buffer);
StopContainerResponseProto *
       stop_container_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stop_container_response_proto__free_unpacked
                     (StopContainerResponseProto *message,
                      ProtobufCAllocator *allocator);
/* GetContainerStatusRequestProto methods */
void   get_container_status_request_proto__init
                     (GetContainerStatusRequestProto         *message);
size_t get_container_status_request_proto__get_packed_size
                     (const GetContainerStatusRequestProto   *message);
size_t get_container_status_request_proto__pack
                     (const GetContainerStatusRequestProto   *message,
                      uint8_t             *out);
size_t get_container_status_request_proto__pack_to_buffer
                     (const GetContainerStatusRequestProto   *message,
                      ProtobufCBuffer     *buffer);
GetContainerStatusRequestProto *
       get_container_status_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_container_status_request_proto__free_unpacked
                     (GetContainerStatusRequestProto *message,
                      ProtobufCAllocator *allocator);
/* GetContainerStatusResponseProto methods */
void   get_container_status_response_proto__init
                     (GetContainerStatusResponseProto         *message);
size_t get_container_status_response_proto__get_packed_size
                     (const GetContainerStatusResponseProto   *message);
size_t get_container_status_response_proto__pack
                     (const GetContainerStatusResponseProto   *message,
                      uint8_t             *out);
size_t get_container_status_response_proto__pack_to_buffer
                     (const GetContainerStatusResponseProto   *message,
                      ProtobufCBuffer     *buffer);
GetContainerStatusResponseProto *
       get_container_status_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_container_status_response_proto__free_unpacked
                     (GetContainerStatusResponseProto *message,
                      ProtobufCAllocator *allocator);
/* StartContainersRequestProto methods */
void   start_containers_request_proto__init
                     (StartContainersRequestProto         *message);
size_t start_containers_request_proto__get_packed_size
                     (const StartContainersRequestProto   *message);
size_t start_containers_request_proto__pack
                     (const StartContainersRequestProto   *message,
                      uint8_t             *out);
size_t start_containers_request_proto__pack_to_buffer
                     (const StartContainersRequestProto   *message,
                      ProtobufCBuffer     *buffer);
StartContainersRequestProto *
       start_containers_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   start_containers_request_proto__free_unpacked
                     (StartContainersRequestProto *message,
                      ProtobufCAllocator *allocator);
/* ContainerExceptionMapProto methods */
void   container_exception_map_proto__init
                     (ContainerExceptionMapProto         *message);
size_t container_exception_map_proto__get_packed_size
                     (const ContainerExceptionMapProto   *message);
size_t container_exception_map_proto__pack
                     (const ContainerExceptionMapProto   *message,
                      uint8_t             *out);
size_t container_exception_map_proto__pack_to_buffer
                     (const ContainerExceptionMapProto   *message,
                      ProtobufCBuffer     *buffer);
ContainerExceptionMapProto *
       container_exception_map_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   container_exception_map_proto__free_unpacked
                     (ContainerExceptionMapProto *message,
                      ProtobufCAllocator *allocator);
/* StartContainersResponseProto methods */
void   start_containers_response_proto__init
                     (StartContainersResponseProto         *message);
size_t start_containers_response_proto__get_packed_size
                     (const StartContainersResponseProto   *message);
size_t start_containers_response_proto__pack
                     (const StartContainersResponseProto   *message,
                      uint8_t             *out);
size_t start_containers_response_proto__pack_to_buffer
                     (const StartContainersResponseProto   *message,
                      ProtobufCBuffer     *buffer);
StartContainersResponseProto *
       start_containers_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   start_containers_response_proto__free_unpacked
                     (StartContainersResponseProto *message,
                      ProtobufCAllocator *allocator);
/* StopContainersRequestProto methods */
void   stop_containers_request_proto__init
                     (StopContainersRequestProto         *message);
size_t stop_containers_request_proto__get_packed_size
                     (const StopContainersRequestProto   *message);
size_t stop_containers_request_proto__pack
                     (const StopContainersRequestProto   *message,
                      uint8_t             *out);
size_t stop_containers_request_proto__pack_to_buffer
                     (const StopContainersRequestProto   *message,
                      ProtobufCBuffer     *buffer);
StopContainersRequestProto *
       stop_containers_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stop_containers_request_proto__free_unpacked
                     (StopContainersRequestProto *message,
                      ProtobufCAllocator *allocator);
/* StopContainersResponseProto methods */
void   stop_containers_response_proto__init
                     (StopContainersResponseProto         *message);
size_t stop_containers_response_proto__get_packed_size
                     (const StopContainersResponseProto   *message);
size_t stop_containers_response_proto__pack
                     (const StopContainersResponseProto   *message,
                      uint8_t             *out);
size_t stop_containers_response_proto__pack_to_buffer
                     (const StopContainersResponseProto   *message,
                      ProtobufCBuffer     *buffer);
StopContainersResponseProto *
       stop_containers_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stop_containers_response_proto__free_unpacked
                     (StopContainersResponseProto *message,
                      ProtobufCAllocator *allocator);
/* GetContainerStatusesRequestProto methods */
void   get_container_statuses_request_proto__init
                     (GetContainerStatusesRequestProto         *message);
size_t get_container_statuses_request_proto__get_packed_size
                     (const GetContainerStatusesRequestProto   *message);
size_t get_container_statuses_request_proto__pack
                     (const GetContainerStatusesRequestProto   *message,
                      uint8_t             *out);
size_t get_container_statuses_request_proto__pack_to_buffer
                     (const GetContainerStatusesRequestProto   *message,
                      ProtobufCBuffer     *buffer);
GetContainerStatusesRequestProto *
       get_container_statuses_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_container_statuses_request_proto__free_unpacked
                     (GetContainerStatusesRequestProto *message,
                      ProtobufCAllocator *allocator);
/* GetContainerStatusesResponseProto methods */
void   get_container_statuses_response_proto__init
                     (GetContainerStatusesResponseProto         *message);
size_t get_container_statuses_response_proto__get_packed_size
                     (const GetContainerStatusesResponseProto   *message);
size_t get_container_statuses_response_proto__pack
                     (const GetContainerStatusesResponseProto   *message,
                      uint8_t             *out);
size_t get_container_statuses_response_proto__pack_to_buffer
                     (const GetContainerStatusesResponseProto   *message,
                      ProtobufCBuffer     *buffer);
GetContainerStatusesResponseProto *
       get_container_statuses_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_container_statuses_response_proto__free_unpacked
                     (GetContainerStatusesResponseProto *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RegisterApplicationMasterRequestProto_Closure)
                 (const RegisterApplicationMasterRequestProto *message,
                  void *closure_data);
typedef void (*RegisterApplicationMasterResponseProto_Closure)
                 (const RegisterApplicationMasterResponseProto *message,
                  void *closure_data);
typedef void (*FinishApplicationMasterRequestProto_Closure)
                 (const FinishApplicationMasterRequestProto *message,
                  void *closure_data);
typedef void (*FinishApplicationMasterResponseProto_Closure)
                 (const FinishApplicationMasterResponseProto *message,
                  void *closure_data);
typedef void (*AllocateRequestProto_Closure)
                 (const AllocateRequestProto *message,
                  void *closure_data);
typedef void (*NMTokenProto_Closure)
                 (const NMTokenProto *message,
                  void *closure_data);
typedef void (*AllocateResponseProto_Closure)
                 (const AllocateResponseProto *message,
                  void *closure_data);
typedef void (*GetNewApplicationRequestProto_Closure)
                 (const GetNewApplicationRequestProto *message,
                  void *closure_data);
typedef void (*GetNewApplicationResponseProto_Closure)
                 (const GetNewApplicationResponseProto *message,
                  void *closure_data);
typedef void (*GetApplicationReportRequestProto_Closure)
                 (const GetApplicationReportRequestProto *message,
                  void *closure_data);
typedef void (*GetApplicationReportResponseProto_Closure)
                 (const GetApplicationReportResponseProto *message,
                  void *closure_data);
typedef void (*SubmitApplicationRequestProto_Closure)
                 (const SubmitApplicationRequestProto *message,
                  void *closure_data);
typedef void (*SubmitApplicationResponseProto_Closure)
                 (const SubmitApplicationResponseProto *message,
                  void *closure_data);
typedef void (*KillApplicationRequestProto_Closure)
                 (const KillApplicationRequestProto *message,
                  void *closure_data);
typedef void (*KillApplicationResponseProto_Closure)
                 (const KillApplicationResponseProto *message,
                  void *closure_data);
typedef void (*GetClusterMetricsRequestProto_Closure)
                 (const GetClusterMetricsRequestProto *message,
                  void *closure_data);
typedef void (*GetClusterMetricsResponseProto_Closure)
                 (const GetClusterMetricsResponseProto *message,
                  void *closure_data);
typedef void (*GetApplicationsRequestProto_Closure)
                 (const GetApplicationsRequestProto *message,
                  void *closure_data);
typedef void (*GetApplicationsResponseProto_Closure)
                 (const GetApplicationsResponseProto *message,
                  void *closure_data);
typedef void (*GetClusterNodesRequestProto_Closure)
                 (const GetClusterNodesRequestProto *message,
                  void *closure_data);
typedef void (*GetClusterNodesResponseProto_Closure)
                 (const GetClusterNodesResponseProto *message,
                  void *closure_data);
typedef void (*GetQueueInfoRequestProto_Closure)
                 (const GetQueueInfoRequestProto *message,
                  void *closure_data);
typedef void (*GetQueueInfoResponseProto_Closure)
                 (const GetQueueInfoResponseProto *message,
                  void *closure_data);
typedef void (*GetQueueUserAclsInfoRequestProto_Closure)
                 (const GetQueueUserAclsInfoRequestProto *message,
                  void *closure_data);
typedef void (*GetQueueUserAclsInfoResponseProto_Closure)
                 (const GetQueueUserAclsInfoResponseProto *message,
                  void *closure_data);
typedef void (*StartContainerRequestProto_Closure)
                 (const StartContainerRequestProto *message,
                  void *closure_data);
typedef void (*StartContainerResponseProto_Closure)
                 (const StartContainerResponseProto *message,
                  void *closure_data);
typedef void (*StopContainerRequestProto_Closure)
                 (const StopContainerRequestProto *message,
                  void *closure_data);
typedef void (*StopContainerResponseProto_Closure)
                 (const StopContainerResponseProto *message,
                  void *closure_data);
typedef void (*GetContainerStatusRequestProto_Closure)
                 (const GetContainerStatusRequestProto *message,
                  void *closure_data);
typedef void (*GetContainerStatusResponseProto_Closure)
                 (const GetContainerStatusResponseProto *message,
                  void *closure_data);
typedef void (*StartContainersRequestProto_Closure)
                 (const StartContainersRequestProto *message,
                  void *closure_data);
typedef void (*ContainerExceptionMapProto_Closure)
                 (const ContainerExceptionMapProto *message,
                  void *closure_data);
typedef void (*StartContainersResponseProto_Closure)
                 (const StartContainersResponseProto *message,
                  void *closure_data);
typedef void (*StopContainersRequestProto_Closure)
                 (const StopContainersRequestProto *message,
                  void *closure_data);
typedef void (*StopContainersResponseProto_Closure)
                 (const StopContainersResponseProto *message,
                  void *closure_data);
typedef void (*GetContainerStatusesRequestProto_Closure)
                 (const GetContainerStatusesRequestProto *message,
                  void *closure_data);
typedef void (*GetContainerStatusesResponseProto_Closure)
                 (const GetContainerStatusesResponseProto *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor register_application_master_request_proto__descriptor;
extern const ProtobufCMessageDescriptor register_application_master_response_proto__descriptor;
extern const ProtobufCMessageDescriptor finish_application_master_request_proto__descriptor;
extern const ProtobufCMessageDescriptor finish_application_master_response_proto__descriptor;
extern const ProtobufCMessageDescriptor allocate_request_proto__descriptor;
extern const ProtobufCMessageDescriptor nmtoken_proto__descriptor;
extern const ProtobufCMessageDescriptor allocate_response_proto__descriptor;
extern const ProtobufCMessageDescriptor get_new_application_request_proto__descriptor;
extern const ProtobufCMessageDescriptor get_new_application_response_proto__descriptor;
extern const ProtobufCMessageDescriptor get_application_report_request_proto__descriptor;
extern const ProtobufCMessageDescriptor get_application_report_response_proto__descriptor;
extern const ProtobufCMessageDescriptor submit_application_request_proto__descriptor;
extern const ProtobufCMessageDescriptor submit_application_response_proto__descriptor;
extern const ProtobufCMessageDescriptor kill_application_request_proto__descriptor;
extern const ProtobufCMessageDescriptor kill_application_response_proto__descriptor;
extern const ProtobufCMessageDescriptor get_cluster_metrics_request_proto__descriptor;
extern const ProtobufCMessageDescriptor get_cluster_metrics_response_proto__descriptor;
extern const ProtobufCMessageDescriptor get_applications_request_proto__descriptor;
extern const ProtobufCMessageDescriptor get_applications_response_proto__descriptor;
extern const ProtobufCMessageDescriptor get_cluster_nodes_request_proto__descriptor;
extern const ProtobufCMessageDescriptor get_cluster_nodes_response_proto__descriptor;
extern const ProtobufCMessageDescriptor get_queue_info_request_proto__descriptor;
extern const ProtobufCMessageDescriptor get_queue_info_response_proto__descriptor;
extern const ProtobufCMessageDescriptor get_queue_user_acls_info_request_proto__descriptor;
extern const ProtobufCMessageDescriptor get_queue_user_acls_info_response_proto__descriptor;
extern const ProtobufCMessageDescriptor start_container_request_proto__descriptor;
extern const ProtobufCMessageDescriptor start_container_response_proto__descriptor;
extern const ProtobufCMessageDescriptor stop_container_request_proto__descriptor;
extern const ProtobufCMessageDescriptor stop_container_response_proto__descriptor;
extern const ProtobufCMessageDescriptor get_container_status_request_proto__descriptor;
extern const ProtobufCMessageDescriptor get_container_status_response_proto__descriptor;
extern const ProtobufCMessageDescriptor start_containers_request_proto__descriptor;
extern const ProtobufCMessageDescriptor container_exception_map_proto__descriptor;
extern const ProtobufCMessageDescriptor start_containers_response_proto__descriptor;
extern const ProtobufCMessageDescriptor stop_containers_request_proto__descriptor;
extern const ProtobufCMessageDescriptor stop_containers_response_proto__descriptor;
extern const ProtobufCMessageDescriptor get_container_statuses_request_proto__descriptor;
extern const ProtobufCMessageDescriptor get_container_statuses_response_proto__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_yarn_5fservice_5fprotos_2eproto__INCLUDED */
