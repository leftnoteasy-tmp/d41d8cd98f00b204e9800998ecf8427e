/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_hdfs_2eproto__INCLUDED
#define PROTOBUF_C_hdfs_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "Security.pb-c.h"

typedef struct _Hadoop__Hdfs__ExtendedBlockProto Hadoop__Hdfs__ExtendedBlockProto;
typedef struct _Hadoop__Hdfs__DatanodeIDProto Hadoop__Hdfs__DatanodeIDProto;
typedef struct _Hadoop__Hdfs__DatanodeInfosProto Hadoop__Hdfs__DatanodeInfosProto;
typedef struct _Hadoop__Hdfs__DatanodeInfoProto Hadoop__Hdfs__DatanodeInfoProto;
typedef struct _Hadoop__Hdfs__ContentSummaryProto Hadoop__Hdfs__ContentSummaryProto;
typedef struct _Hadoop__Hdfs__CorruptFileBlocksProto Hadoop__Hdfs__CorruptFileBlocksProto;
typedef struct _Hadoop__Hdfs__FsPermissionProto Hadoop__Hdfs__FsPermissionProto;
typedef struct _Hadoop__Hdfs__LocatedBlockProto Hadoop__Hdfs__LocatedBlockProto;
typedef struct _Hadoop__Hdfs__DataEncryptionKeyProto Hadoop__Hdfs__DataEncryptionKeyProto;
typedef struct _Hadoop__Hdfs__LocatedBlocksProto Hadoop__Hdfs__LocatedBlocksProto;
typedef struct _Hadoop__Hdfs__HdfsFileStatusProto Hadoop__Hdfs__HdfsFileStatusProto;
typedef struct _Hadoop__Hdfs__FsServerDefaultsProto Hadoop__Hdfs__FsServerDefaultsProto;
typedef struct _Hadoop__Hdfs__DirectoryListingProto Hadoop__Hdfs__DirectoryListingProto;
typedef struct _Hadoop__Hdfs__SnapshottableDirectoryStatusProto Hadoop__Hdfs__SnapshottableDirectoryStatusProto;
typedef struct _Hadoop__Hdfs__SnapshottableDirectoryListingProto Hadoop__Hdfs__SnapshottableDirectoryListingProto;
typedef struct _Hadoop__Hdfs__SnapshotDiffReportEntryProto Hadoop__Hdfs__SnapshotDiffReportEntryProto;
typedef struct _Hadoop__Hdfs__SnapshotDiffReportProto Hadoop__Hdfs__SnapshotDiffReportProto;
typedef struct _Hadoop__Hdfs__StorageInfoProto Hadoop__Hdfs__StorageInfoProto;
typedef struct _Hadoop__Hdfs__NamenodeRegistrationProto Hadoop__Hdfs__NamenodeRegistrationProto;
typedef struct _Hadoop__Hdfs__CheckpointSignatureProto Hadoop__Hdfs__CheckpointSignatureProto;
typedef struct _Hadoop__Hdfs__NamenodeCommandProto Hadoop__Hdfs__NamenodeCommandProto;
typedef struct _Hadoop__Hdfs__CheckpointCommandProto Hadoop__Hdfs__CheckpointCommandProto;
typedef struct _Hadoop__Hdfs__BlockProto Hadoop__Hdfs__BlockProto;
typedef struct _Hadoop__Hdfs__BlockWithLocationsProto Hadoop__Hdfs__BlockWithLocationsProto;
typedef struct _Hadoop__Hdfs__BlocksWithLocationsProto Hadoop__Hdfs__BlocksWithLocationsProto;
typedef struct _Hadoop__Hdfs__RemoteEditLogProto Hadoop__Hdfs__RemoteEditLogProto;
typedef struct _Hadoop__Hdfs__RemoteEditLogManifestProto Hadoop__Hdfs__RemoteEditLogManifestProto;
typedef struct _Hadoop__Hdfs__NamespaceInfoProto Hadoop__Hdfs__NamespaceInfoProto;
typedef struct _Hadoop__Hdfs__BlockKeyProto Hadoop__Hdfs__BlockKeyProto;
typedef struct _Hadoop__Hdfs__ExportedBlockKeysProto Hadoop__Hdfs__ExportedBlockKeysProto;
typedef struct _Hadoop__Hdfs__RecoveringBlockProto Hadoop__Hdfs__RecoveringBlockProto;
typedef struct _Hadoop__Hdfs__VersionRequestProto Hadoop__Hdfs__VersionRequestProto;
typedef struct _Hadoop__Hdfs__VersionResponseProto Hadoop__Hdfs__VersionResponseProto;
typedef struct _Hadoop__Hdfs__SnapshotInfoProto Hadoop__Hdfs__SnapshotInfoProto;


/* --- enums --- */

typedef enum _Hadoop__Hdfs__DatanodeInfoProto__AdminState {
  HADOOP__HDFS__DATANODE_INFO_PROTO__ADMIN_STATE__NORMAL = 0,
  HADOOP__HDFS__DATANODE_INFO_PROTO__ADMIN_STATE__DECOMMISSION_INPROGRESS = 1,
  HADOOP__HDFS__DATANODE_INFO_PROTO__ADMIN_STATE__DECOMMISSIONED = 2
} Hadoop__Hdfs__DatanodeInfoProto__AdminState;
typedef enum _Hadoop__Hdfs__HdfsFileStatusProto__FileType {
  HADOOP__HDFS__HDFS_FILE_STATUS_PROTO__FILE_TYPE__IS_DIR = 1,
  HADOOP__HDFS__HDFS_FILE_STATUS_PROTO__FILE_TYPE__IS_FILE = 2,
  HADOOP__HDFS__HDFS_FILE_STATUS_PROTO__FILE_TYPE__IS_SYMLINK = 3
} Hadoop__Hdfs__HdfsFileStatusProto__FileType;
typedef enum _Hadoop__Hdfs__NamenodeRegistrationProto__NamenodeRoleProto {
  HADOOP__HDFS__NAMENODE_REGISTRATION_PROTO__NAMENODE_ROLE_PROTO__NAMENODE = 1,
  HADOOP__HDFS__NAMENODE_REGISTRATION_PROTO__NAMENODE_ROLE_PROTO__BACKUP = 2,
  HADOOP__HDFS__NAMENODE_REGISTRATION_PROTO__NAMENODE_ROLE_PROTO__CHECKPOINT = 3
} Hadoop__Hdfs__NamenodeRegistrationProto__NamenodeRoleProto;
typedef enum _Hadoop__Hdfs__NamenodeCommandProto__Type {
  HADOOP__HDFS__NAMENODE_COMMAND_PROTO__TYPE__NamenodeCommand = 0,
  HADOOP__HDFS__NAMENODE_COMMAND_PROTO__TYPE__CheckPointCommand = 1
} Hadoop__Hdfs__NamenodeCommandProto__Type;
typedef enum _Hadoop__Hdfs__ChecksumTypeProto {
  HADOOP__HDFS__CHECKSUM_TYPE_PROTO__CHECKSUM_NULL = 0,
  HADOOP__HDFS__CHECKSUM_TYPE_PROTO__CHECKSUM_CRC32 = 1,
  HADOOP__HDFS__CHECKSUM_TYPE_PROTO__CHECKSUM_CRC32C = 2
} Hadoop__Hdfs__ChecksumTypeProto;
typedef enum _Hadoop__Hdfs__ReplicaStateProto {
  HADOOP__HDFS__REPLICA_STATE_PROTO__FINALIZED = 0,
  HADOOP__HDFS__REPLICA_STATE_PROTO__RBW = 1,
  HADOOP__HDFS__REPLICA_STATE_PROTO__RWR = 2,
  HADOOP__HDFS__REPLICA_STATE_PROTO__RUR = 3,
  HADOOP__HDFS__REPLICA_STATE_PROTO__TEMPORARY = 4
} Hadoop__Hdfs__ReplicaStateProto;

/* --- messages --- */

struct  _Hadoop__Hdfs__ExtendedBlockProto
{
  ProtobufCMessage base;
  char *poolid;
  uint64_t blockid;
  uint64_t generationstamp;
  protobuf_c_boolean has_numbytes;
  uint64_t numbytes;
};
#define HADOOP__HDFS__EXTENDED_BLOCK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__extended_block_proto__descriptor) \
    , NULL, 0, 0, 0,0 }


struct  _Hadoop__Hdfs__DatanodeIDProto
{
  ProtobufCMessage base;
  char *ipaddr;
  char *hostname;
  char *storageid;
  uint32_t xferport;
  uint32_t infoport;
  uint32_t ipcport;
};
#define HADOOP__HDFS__DATANODE_IDPROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__datanode_idproto__descriptor) \
    , NULL, NULL, NULL, 0, 0, 0 }


struct  _Hadoop__Hdfs__DatanodeInfosProto
{
  ProtobufCMessage base;
  size_t n_datanodes;
  Hadoop__Hdfs__DatanodeInfoProto **datanodes;
};
#define HADOOP__HDFS__DATANODE_INFOS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__datanode_infos_proto__descriptor) \
    , 0,NULL }


struct  _Hadoop__Hdfs__DatanodeInfoProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__DatanodeIDProto *id;
  protobuf_c_boolean has_capacity;
  uint64_t capacity;
  protobuf_c_boolean has_dfsused;
  uint64_t dfsused;
  protobuf_c_boolean has_remaining;
  uint64_t remaining;
  protobuf_c_boolean has_blockpoolused;
  uint64_t blockpoolused;
  protobuf_c_boolean has_lastupdate;
  uint64_t lastupdate;
  protobuf_c_boolean has_xceivercount;
  uint32_t xceivercount;
  char *location;
  protobuf_c_boolean has_adminstate;
  Hadoop__Hdfs__DatanodeInfoProto__AdminState adminstate;
};
#define HADOOP__HDFS__DATANODE_INFO_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__datanode_info_proto__descriptor) \
    , NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,HADOOP__HDFS__DATANODE_INFO_PROTO__ADMIN_STATE__NORMAL }


struct  _Hadoop__Hdfs__ContentSummaryProto
{
  ProtobufCMessage base;
  uint64_t length;
  uint64_t filecount;
  uint64_t directorycount;
  uint64_t quota;
  uint64_t spaceconsumed;
  uint64_t spacequota;
};
#define HADOOP__HDFS__CONTENT_SUMMARY_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__content_summary_proto__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  _Hadoop__Hdfs__CorruptFileBlocksProto
{
  ProtobufCMessage base;
  size_t n_files;
  char **files;
  char *cookie;
};
#define HADOOP__HDFS__CORRUPT_FILE_BLOCKS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__corrupt_file_blocks_proto__descriptor) \
    , 0,NULL, NULL }


struct  _Hadoop__Hdfs__FsPermissionProto
{
  ProtobufCMessage base;
  uint32_t perm;
};
#define HADOOP__HDFS__FS_PERMISSION_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__fs_permission_proto__descriptor) \
    , 0 }


struct  _Hadoop__Hdfs__LocatedBlockProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__ExtendedBlockProto *b;
  uint64_t offset;
  size_t n_locs;
  Hadoop__Hdfs__DatanodeInfoProto **locs;
  protobuf_c_boolean corrupt;
  Hadoop__Common__TokenProto *blocktoken;
};
#define HADOOP__HDFS__LOCATED_BLOCK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__located_block_proto__descriptor) \
    , NULL, 0, 0,NULL, 0, NULL }


struct  _Hadoop__Hdfs__DataEncryptionKeyProto
{
  ProtobufCMessage base;
  uint32_t keyid;
  char *blockpoolid;
  ProtobufCBinaryData nonce;
  ProtobufCBinaryData encryptionkey;
  uint64_t expirydate;
  char *encryptionalgorithm;
};
#define HADOOP__HDFS__DATA_ENCRYPTION_KEY_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__data_encryption_key_proto__descriptor) \
    , 0, NULL, {0,NULL}, {0,NULL}, 0, NULL }


struct  _Hadoop__Hdfs__LocatedBlocksProto
{
  ProtobufCMessage base;
  uint64_t filelength;
  size_t n_blocks;
  Hadoop__Hdfs__LocatedBlockProto **blocks;
  protobuf_c_boolean underconstruction;
  Hadoop__Hdfs__LocatedBlockProto *lastblock;
  protobuf_c_boolean islastblockcomplete;
};
#define HADOOP__HDFS__LOCATED_BLOCKS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__located_blocks_proto__descriptor) \
    , 0, 0,NULL, 0, NULL, 0 }


struct  _Hadoop__Hdfs__HdfsFileStatusProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__HdfsFileStatusProto__FileType filetype;
  ProtobufCBinaryData path;
  uint64_t length;
  Hadoop__Hdfs__FsPermissionProto *permission;
  char *owner;
  char *group;
  uint64_t modification_time;
  uint64_t access_time;
  protobuf_c_boolean has_symlink;
  ProtobufCBinaryData symlink;
  protobuf_c_boolean has_block_replication;
  uint32_t block_replication;
  protobuf_c_boolean has_blocksize;
  uint64_t blocksize;
  Hadoop__Hdfs__LocatedBlocksProto *locations;
  protobuf_c_boolean has_fileid;
  uint64_t fileid;
  protobuf_c_boolean has_childrennum;
  uint32_t childrennum;
};
#define HADOOP__HDFS__HDFS_FILE_STATUS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__hdfs_file_status_proto__descriptor) \
    , 0, {0,NULL}, 0, NULL, NULL, NULL, 0, 0, 0,{0,NULL}, 0,0, 0,0, NULL, 0,0, 0,0 }


struct  _Hadoop__Hdfs__FsServerDefaultsProto
{
  ProtobufCMessage base;
  uint64_t blocksize;
  uint32_t bytesperchecksum;
  uint32_t writepacketsize;
  uint32_t replication;
  uint32_t filebuffersize;
  protobuf_c_boolean has_encryptdatatransfer;
  protobuf_c_boolean encryptdatatransfer;
  protobuf_c_boolean has_trashinterval;
  uint64_t trashinterval;
  protobuf_c_boolean has_checksumtype;
  Hadoop__Hdfs__ChecksumTypeProto checksumtype;
};
#define HADOOP__HDFS__FS_SERVER_DEFAULTS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__fs_server_defaults_proto__descriptor) \
    , 0, 0, 0, 0, 0, 0,0, 0,0, 0,HADOOP__HDFS__CHECKSUM_TYPE_PROTO__CHECKSUM_CRC32 }


struct  _Hadoop__Hdfs__DirectoryListingProto
{
  ProtobufCMessage base;
  size_t n_partiallisting;
  Hadoop__Hdfs__HdfsFileStatusProto **partiallisting;
  uint32_t remainingentries;
};
#define HADOOP__HDFS__DIRECTORY_LISTING_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__directory_listing_proto__descriptor) \
    , 0,NULL, 0 }


struct  _Hadoop__Hdfs__SnapshottableDirectoryStatusProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__HdfsFileStatusProto *dirstatus;
  uint32_t snapshot_quota;
  uint32_t snapshot_number;
  ProtobufCBinaryData parent_fullpath;
};
#define HADOOP__HDFS__SNAPSHOTTABLE_DIRECTORY_STATUS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__snapshottable_directory_status_proto__descriptor) \
    , NULL, 0, 0, {0,NULL} }


struct  _Hadoop__Hdfs__SnapshottableDirectoryListingProto
{
  ProtobufCMessage base;
  size_t n_snapshottabledirlisting;
  Hadoop__Hdfs__SnapshottableDirectoryStatusProto **snapshottabledirlisting;
};
#define HADOOP__HDFS__SNAPSHOTTABLE_DIRECTORY_LISTING_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__snapshottable_directory_listing_proto__descriptor) \
    , 0,NULL }


struct  _Hadoop__Hdfs__SnapshotDiffReportEntryProto
{
  ProtobufCMessage base;
  ProtobufCBinaryData fullpath;
  char *modificationlabel;
};
#define HADOOP__HDFS__SNAPSHOT_DIFF_REPORT_ENTRY_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__snapshot_diff_report_entry_proto__descriptor) \
    , {0,NULL}, NULL }


struct  _Hadoop__Hdfs__SnapshotDiffReportProto
{
  ProtobufCMessage base;
  char *snapshotroot;
  char *fromsnapshot;
  char *tosnapshot;
  size_t n_diffreportentries;
  Hadoop__Hdfs__SnapshotDiffReportEntryProto **diffreportentries;
};
#define HADOOP__HDFS__SNAPSHOT_DIFF_REPORT_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__snapshot_diff_report_proto__descriptor) \
    , NULL, NULL, NULL, 0,NULL }


struct  _Hadoop__Hdfs__StorageInfoProto
{
  ProtobufCMessage base;
  uint32_t layoutversion;
  uint32_t namespceid;
  char *clusterid;
  uint64_t ctime;
};
#define HADOOP__HDFS__STORAGE_INFO_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__storage_info_proto__descriptor) \
    , 0, 0, NULL, 0 }


struct  _Hadoop__Hdfs__NamenodeRegistrationProto
{
  ProtobufCMessage base;
  char *rpcaddress;
  char *httpaddress;
  Hadoop__Hdfs__StorageInfoProto *storageinfo;
  protobuf_c_boolean has_role;
  Hadoop__Hdfs__NamenodeRegistrationProto__NamenodeRoleProto role;
};
#define HADOOP__HDFS__NAMENODE_REGISTRATION_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__namenode_registration_proto__descriptor) \
    , NULL, NULL, NULL, 0,HADOOP__HDFS__NAMENODE_REGISTRATION_PROTO__NAMENODE_ROLE_PROTO__NAMENODE }


struct  _Hadoop__Hdfs__CheckpointSignatureProto
{
  ProtobufCMessage base;
  char *blockpoolid;
  uint64_t mostrecentcheckpointtxid;
  uint64_t cursegmenttxid;
  Hadoop__Hdfs__StorageInfoProto *storageinfo;
};
#define HADOOP__HDFS__CHECKPOINT_SIGNATURE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__checkpoint_signature_proto__descriptor) \
    , NULL, 0, 0, NULL }


struct  _Hadoop__Hdfs__NamenodeCommandProto
{
  ProtobufCMessage base;
  uint32_t action;
  Hadoop__Hdfs__NamenodeCommandProto__Type type;
  Hadoop__Hdfs__CheckpointCommandProto *checkpointcmd;
};
#define HADOOP__HDFS__NAMENODE_COMMAND_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__namenode_command_proto__descriptor) \
    , 0, 0, NULL }


struct  _Hadoop__Hdfs__CheckpointCommandProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__CheckpointSignatureProto *signature;
  protobuf_c_boolean needtoreturnimage;
};
#define HADOOP__HDFS__CHECKPOINT_COMMAND_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__checkpoint_command_proto__descriptor) \
    , NULL, 0 }


struct  _Hadoop__Hdfs__BlockProto
{
  ProtobufCMessage base;
  uint64_t blockid;
  uint64_t genstamp;
  protobuf_c_boolean has_numbytes;
  uint64_t numbytes;
};
#define HADOOP__HDFS__BLOCK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__block_proto__descriptor) \
    , 0, 0, 0,0 }


struct  _Hadoop__Hdfs__BlockWithLocationsProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__BlockProto *block;
  size_t n_storageids;
  char **storageids;
};
#define HADOOP__HDFS__BLOCK_WITH_LOCATIONS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__block_with_locations_proto__descriptor) \
    , NULL, 0,NULL }


struct  _Hadoop__Hdfs__BlocksWithLocationsProto
{
  ProtobufCMessage base;
  size_t n_blocks;
  Hadoop__Hdfs__BlockWithLocationsProto **blocks;
};
#define HADOOP__HDFS__BLOCKS_WITH_LOCATIONS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__blocks_with_locations_proto__descriptor) \
    , 0,NULL }


struct  _Hadoop__Hdfs__RemoteEditLogProto
{
  ProtobufCMessage base;
  uint64_t starttxid;
  uint64_t endtxid;
  protobuf_c_boolean has_isinprogress;
  protobuf_c_boolean isinprogress;
};
#define HADOOP__HDFS__REMOTE_EDIT_LOG_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__remote_edit_log_proto__descriptor) \
    , 0, 0, 0,0 }


struct  _Hadoop__Hdfs__RemoteEditLogManifestProto
{
  ProtobufCMessage base;
  size_t n_logs;
  Hadoop__Hdfs__RemoteEditLogProto **logs;
};
#define HADOOP__HDFS__REMOTE_EDIT_LOG_MANIFEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__remote_edit_log_manifest_proto__descriptor) \
    , 0,NULL }


struct  _Hadoop__Hdfs__NamespaceInfoProto
{
  ProtobufCMessage base;
  char *buildversion;
  uint32_t unused;
  char *blockpoolid;
  Hadoop__Hdfs__StorageInfoProto *storageinfo;
  char *softwareversion;
};
#define HADOOP__HDFS__NAMESPACE_INFO_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__namespace_info_proto__descriptor) \
    , NULL, 0, NULL, NULL, NULL }


struct  _Hadoop__Hdfs__BlockKeyProto
{
  ProtobufCMessage base;
  uint32_t keyid;
  uint64_t expirydate;
  protobuf_c_boolean has_keybytes;
  ProtobufCBinaryData keybytes;
};
#define HADOOP__HDFS__BLOCK_KEY_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__block_key_proto__descriptor) \
    , 0, 0, 0,{0,NULL} }


struct  _Hadoop__Hdfs__ExportedBlockKeysProto
{
  ProtobufCMessage base;
  protobuf_c_boolean isblocktokenenabled;
  uint64_t keyupdateinterval;
  uint64_t tokenlifetime;
  Hadoop__Hdfs__BlockKeyProto *currentkey;
  size_t n_allkeys;
  Hadoop__Hdfs__BlockKeyProto **allkeys;
};
#define HADOOP__HDFS__EXPORTED_BLOCK_KEYS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__exported_block_keys_proto__descriptor) \
    , 0, 0, 0, NULL, 0,NULL }


struct  _Hadoop__Hdfs__RecoveringBlockProto
{
  ProtobufCMessage base;
  uint64_t newgenstamp;
  Hadoop__Hdfs__LocatedBlockProto *block;
};
#define HADOOP__HDFS__RECOVERING_BLOCK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__recovering_block_proto__descriptor) \
    , 0, NULL }


struct  _Hadoop__Hdfs__VersionRequestProto
{
  ProtobufCMessage base;
};
#define HADOOP__HDFS__VERSION_REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__version_request_proto__descriptor) \
     }


struct  _Hadoop__Hdfs__VersionResponseProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__NamespaceInfoProto *info;
};
#define HADOOP__HDFS__VERSION_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__version_response_proto__descriptor) \
    , NULL }


struct  _Hadoop__Hdfs__SnapshotInfoProto
{
  ProtobufCMessage base;
  char *snapshotname;
  char *snapshotroot;
  Hadoop__Hdfs__FsPermissionProto *permission;
  char *owner;
  char *group;
  char *createtime;
};
#define HADOOP__HDFS__SNAPSHOT_INFO_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__snapshot_info_proto__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL }


/* Hadoop__Hdfs__ExtendedBlockProto methods */
void   hadoop__hdfs__extended_block_proto__init
                     (Hadoop__Hdfs__ExtendedBlockProto         *message);
size_t hadoop__hdfs__extended_block_proto__get_packed_size
                     (const Hadoop__Hdfs__ExtendedBlockProto   *message);
size_t hadoop__hdfs__extended_block_proto__pack
                     (const Hadoop__Hdfs__ExtendedBlockProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__extended_block_proto__pack_to_buffer
                     (const Hadoop__Hdfs__ExtendedBlockProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__ExtendedBlockProto *
       hadoop__hdfs__extended_block_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__extended_block_proto__free_unpacked
                     (Hadoop__Hdfs__ExtendedBlockProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__DatanodeIDProto methods */
void   hadoop__hdfs__datanode_idproto__init
                     (Hadoop__Hdfs__DatanodeIDProto         *message);
size_t hadoop__hdfs__datanode_idproto__get_packed_size
                     (const Hadoop__Hdfs__DatanodeIDProto   *message);
size_t hadoop__hdfs__datanode_idproto__pack
                     (const Hadoop__Hdfs__DatanodeIDProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__datanode_idproto__pack_to_buffer
                     (const Hadoop__Hdfs__DatanodeIDProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__DatanodeIDProto *
       hadoop__hdfs__datanode_idproto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__datanode_idproto__free_unpacked
                     (Hadoop__Hdfs__DatanodeIDProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__DatanodeInfosProto methods */
void   hadoop__hdfs__datanode_infos_proto__init
                     (Hadoop__Hdfs__DatanodeInfosProto         *message);
size_t hadoop__hdfs__datanode_infos_proto__get_packed_size
                     (const Hadoop__Hdfs__DatanodeInfosProto   *message);
size_t hadoop__hdfs__datanode_infos_proto__pack
                     (const Hadoop__Hdfs__DatanodeInfosProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__datanode_infos_proto__pack_to_buffer
                     (const Hadoop__Hdfs__DatanodeInfosProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__DatanodeInfosProto *
       hadoop__hdfs__datanode_infos_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__datanode_infos_proto__free_unpacked
                     (Hadoop__Hdfs__DatanodeInfosProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__DatanodeInfoProto methods */
void   hadoop__hdfs__datanode_info_proto__init
                     (Hadoop__Hdfs__DatanodeInfoProto         *message);
size_t hadoop__hdfs__datanode_info_proto__get_packed_size
                     (const Hadoop__Hdfs__DatanodeInfoProto   *message);
size_t hadoop__hdfs__datanode_info_proto__pack
                     (const Hadoop__Hdfs__DatanodeInfoProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__datanode_info_proto__pack_to_buffer
                     (const Hadoop__Hdfs__DatanodeInfoProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__DatanodeInfoProto *
       hadoop__hdfs__datanode_info_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__datanode_info_proto__free_unpacked
                     (Hadoop__Hdfs__DatanodeInfoProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__ContentSummaryProto methods */
void   hadoop__hdfs__content_summary_proto__init
                     (Hadoop__Hdfs__ContentSummaryProto         *message);
size_t hadoop__hdfs__content_summary_proto__get_packed_size
                     (const Hadoop__Hdfs__ContentSummaryProto   *message);
size_t hadoop__hdfs__content_summary_proto__pack
                     (const Hadoop__Hdfs__ContentSummaryProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__content_summary_proto__pack_to_buffer
                     (const Hadoop__Hdfs__ContentSummaryProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__ContentSummaryProto *
       hadoop__hdfs__content_summary_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__content_summary_proto__free_unpacked
                     (Hadoop__Hdfs__ContentSummaryProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__CorruptFileBlocksProto methods */
void   hadoop__hdfs__corrupt_file_blocks_proto__init
                     (Hadoop__Hdfs__CorruptFileBlocksProto         *message);
size_t hadoop__hdfs__corrupt_file_blocks_proto__get_packed_size
                     (const Hadoop__Hdfs__CorruptFileBlocksProto   *message);
size_t hadoop__hdfs__corrupt_file_blocks_proto__pack
                     (const Hadoop__Hdfs__CorruptFileBlocksProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__corrupt_file_blocks_proto__pack_to_buffer
                     (const Hadoop__Hdfs__CorruptFileBlocksProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__CorruptFileBlocksProto *
       hadoop__hdfs__corrupt_file_blocks_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__corrupt_file_blocks_proto__free_unpacked
                     (Hadoop__Hdfs__CorruptFileBlocksProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__FsPermissionProto methods */
void   hadoop__hdfs__fs_permission_proto__init
                     (Hadoop__Hdfs__FsPermissionProto         *message);
size_t hadoop__hdfs__fs_permission_proto__get_packed_size
                     (const Hadoop__Hdfs__FsPermissionProto   *message);
size_t hadoop__hdfs__fs_permission_proto__pack
                     (const Hadoop__Hdfs__FsPermissionProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__fs_permission_proto__pack_to_buffer
                     (const Hadoop__Hdfs__FsPermissionProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__FsPermissionProto *
       hadoop__hdfs__fs_permission_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__fs_permission_proto__free_unpacked
                     (Hadoop__Hdfs__FsPermissionProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__LocatedBlockProto methods */
void   hadoop__hdfs__located_block_proto__init
                     (Hadoop__Hdfs__LocatedBlockProto         *message);
size_t hadoop__hdfs__located_block_proto__get_packed_size
                     (const Hadoop__Hdfs__LocatedBlockProto   *message);
size_t hadoop__hdfs__located_block_proto__pack
                     (const Hadoop__Hdfs__LocatedBlockProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__located_block_proto__pack_to_buffer
                     (const Hadoop__Hdfs__LocatedBlockProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__LocatedBlockProto *
       hadoop__hdfs__located_block_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__located_block_proto__free_unpacked
                     (Hadoop__Hdfs__LocatedBlockProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__DataEncryptionKeyProto methods */
void   hadoop__hdfs__data_encryption_key_proto__init
                     (Hadoop__Hdfs__DataEncryptionKeyProto         *message);
size_t hadoop__hdfs__data_encryption_key_proto__get_packed_size
                     (const Hadoop__Hdfs__DataEncryptionKeyProto   *message);
size_t hadoop__hdfs__data_encryption_key_proto__pack
                     (const Hadoop__Hdfs__DataEncryptionKeyProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__data_encryption_key_proto__pack_to_buffer
                     (const Hadoop__Hdfs__DataEncryptionKeyProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__DataEncryptionKeyProto *
       hadoop__hdfs__data_encryption_key_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__data_encryption_key_proto__free_unpacked
                     (Hadoop__Hdfs__DataEncryptionKeyProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__LocatedBlocksProto methods */
void   hadoop__hdfs__located_blocks_proto__init
                     (Hadoop__Hdfs__LocatedBlocksProto         *message);
size_t hadoop__hdfs__located_blocks_proto__get_packed_size
                     (const Hadoop__Hdfs__LocatedBlocksProto   *message);
size_t hadoop__hdfs__located_blocks_proto__pack
                     (const Hadoop__Hdfs__LocatedBlocksProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__located_blocks_proto__pack_to_buffer
                     (const Hadoop__Hdfs__LocatedBlocksProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__LocatedBlocksProto *
       hadoop__hdfs__located_blocks_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__located_blocks_proto__free_unpacked
                     (Hadoop__Hdfs__LocatedBlocksProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__HdfsFileStatusProto methods */
void   hadoop__hdfs__hdfs_file_status_proto__init
                     (Hadoop__Hdfs__HdfsFileStatusProto         *message);
size_t hadoop__hdfs__hdfs_file_status_proto__get_packed_size
                     (const Hadoop__Hdfs__HdfsFileStatusProto   *message);
size_t hadoop__hdfs__hdfs_file_status_proto__pack
                     (const Hadoop__Hdfs__HdfsFileStatusProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__hdfs_file_status_proto__pack_to_buffer
                     (const Hadoop__Hdfs__HdfsFileStatusProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__HdfsFileStatusProto *
       hadoop__hdfs__hdfs_file_status_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__hdfs_file_status_proto__free_unpacked
                     (Hadoop__Hdfs__HdfsFileStatusProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__FsServerDefaultsProto methods */
void   hadoop__hdfs__fs_server_defaults_proto__init
                     (Hadoop__Hdfs__FsServerDefaultsProto         *message);
size_t hadoop__hdfs__fs_server_defaults_proto__get_packed_size
                     (const Hadoop__Hdfs__FsServerDefaultsProto   *message);
size_t hadoop__hdfs__fs_server_defaults_proto__pack
                     (const Hadoop__Hdfs__FsServerDefaultsProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__fs_server_defaults_proto__pack_to_buffer
                     (const Hadoop__Hdfs__FsServerDefaultsProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__FsServerDefaultsProto *
       hadoop__hdfs__fs_server_defaults_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__fs_server_defaults_proto__free_unpacked
                     (Hadoop__Hdfs__FsServerDefaultsProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__DirectoryListingProto methods */
void   hadoop__hdfs__directory_listing_proto__init
                     (Hadoop__Hdfs__DirectoryListingProto         *message);
size_t hadoop__hdfs__directory_listing_proto__get_packed_size
                     (const Hadoop__Hdfs__DirectoryListingProto   *message);
size_t hadoop__hdfs__directory_listing_proto__pack
                     (const Hadoop__Hdfs__DirectoryListingProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__directory_listing_proto__pack_to_buffer
                     (const Hadoop__Hdfs__DirectoryListingProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__DirectoryListingProto *
       hadoop__hdfs__directory_listing_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__directory_listing_proto__free_unpacked
                     (Hadoop__Hdfs__DirectoryListingProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__SnapshottableDirectoryStatusProto methods */
void   hadoop__hdfs__snapshottable_directory_status_proto__init
                     (Hadoop__Hdfs__SnapshottableDirectoryStatusProto         *message);
size_t hadoop__hdfs__snapshottable_directory_status_proto__get_packed_size
                     (const Hadoop__Hdfs__SnapshottableDirectoryStatusProto   *message);
size_t hadoop__hdfs__snapshottable_directory_status_proto__pack
                     (const Hadoop__Hdfs__SnapshottableDirectoryStatusProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__snapshottable_directory_status_proto__pack_to_buffer
                     (const Hadoop__Hdfs__SnapshottableDirectoryStatusProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__SnapshottableDirectoryStatusProto *
       hadoop__hdfs__snapshottable_directory_status_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__snapshottable_directory_status_proto__free_unpacked
                     (Hadoop__Hdfs__SnapshottableDirectoryStatusProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__SnapshottableDirectoryListingProto methods */
void   hadoop__hdfs__snapshottable_directory_listing_proto__init
                     (Hadoop__Hdfs__SnapshottableDirectoryListingProto         *message);
size_t hadoop__hdfs__snapshottable_directory_listing_proto__get_packed_size
                     (const Hadoop__Hdfs__SnapshottableDirectoryListingProto   *message);
size_t hadoop__hdfs__snapshottable_directory_listing_proto__pack
                     (const Hadoop__Hdfs__SnapshottableDirectoryListingProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__snapshottable_directory_listing_proto__pack_to_buffer
                     (const Hadoop__Hdfs__SnapshottableDirectoryListingProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__SnapshottableDirectoryListingProto *
       hadoop__hdfs__snapshottable_directory_listing_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__snapshottable_directory_listing_proto__free_unpacked
                     (Hadoop__Hdfs__SnapshottableDirectoryListingProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__SnapshotDiffReportEntryProto methods */
void   hadoop__hdfs__snapshot_diff_report_entry_proto__init
                     (Hadoop__Hdfs__SnapshotDiffReportEntryProto         *message);
size_t hadoop__hdfs__snapshot_diff_report_entry_proto__get_packed_size
                     (const Hadoop__Hdfs__SnapshotDiffReportEntryProto   *message);
size_t hadoop__hdfs__snapshot_diff_report_entry_proto__pack
                     (const Hadoop__Hdfs__SnapshotDiffReportEntryProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__snapshot_diff_report_entry_proto__pack_to_buffer
                     (const Hadoop__Hdfs__SnapshotDiffReportEntryProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__SnapshotDiffReportEntryProto *
       hadoop__hdfs__snapshot_diff_report_entry_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__snapshot_diff_report_entry_proto__free_unpacked
                     (Hadoop__Hdfs__SnapshotDiffReportEntryProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__SnapshotDiffReportProto methods */
void   hadoop__hdfs__snapshot_diff_report_proto__init
                     (Hadoop__Hdfs__SnapshotDiffReportProto         *message);
size_t hadoop__hdfs__snapshot_diff_report_proto__get_packed_size
                     (const Hadoop__Hdfs__SnapshotDiffReportProto   *message);
size_t hadoop__hdfs__snapshot_diff_report_proto__pack
                     (const Hadoop__Hdfs__SnapshotDiffReportProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__snapshot_diff_report_proto__pack_to_buffer
                     (const Hadoop__Hdfs__SnapshotDiffReportProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__SnapshotDiffReportProto *
       hadoop__hdfs__snapshot_diff_report_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__snapshot_diff_report_proto__free_unpacked
                     (Hadoop__Hdfs__SnapshotDiffReportProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__StorageInfoProto methods */
void   hadoop__hdfs__storage_info_proto__init
                     (Hadoop__Hdfs__StorageInfoProto         *message);
size_t hadoop__hdfs__storage_info_proto__get_packed_size
                     (const Hadoop__Hdfs__StorageInfoProto   *message);
size_t hadoop__hdfs__storage_info_proto__pack
                     (const Hadoop__Hdfs__StorageInfoProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__storage_info_proto__pack_to_buffer
                     (const Hadoop__Hdfs__StorageInfoProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__StorageInfoProto *
       hadoop__hdfs__storage_info_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__storage_info_proto__free_unpacked
                     (Hadoop__Hdfs__StorageInfoProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__NamenodeRegistrationProto methods */
void   hadoop__hdfs__namenode_registration_proto__init
                     (Hadoop__Hdfs__NamenodeRegistrationProto         *message);
size_t hadoop__hdfs__namenode_registration_proto__get_packed_size
                     (const Hadoop__Hdfs__NamenodeRegistrationProto   *message);
size_t hadoop__hdfs__namenode_registration_proto__pack
                     (const Hadoop__Hdfs__NamenodeRegistrationProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__namenode_registration_proto__pack_to_buffer
                     (const Hadoop__Hdfs__NamenodeRegistrationProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__NamenodeRegistrationProto *
       hadoop__hdfs__namenode_registration_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__namenode_registration_proto__free_unpacked
                     (Hadoop__Hdfs__NamenodeRegistrationProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__CheckpointSignatureProto methods */
void   hadoop__hdfs__checkpoint_signature_proto__init
                     (Hadoop__Hdfs__CheckpointSignatureProto         *message);
size_t hadoop__hdfs__checkpoint_signature_proto__get_packed_size
                     (const Hadoop__Hdfs__CheckpointSignatureProto   *message);
size_t hadoop__hdfs__checkpoint_signature_proto__pack
                     (const Hadoop__Hdfs__CheckpointSignatureProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__checkpoint_signature_proto__pack_to_buffer
                     (const Hadoop__Hdfs__CheckpointSignatureProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__CheckpointSignatureProto *
       hadoop__hdfs__checkpoint_signature_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__checkpoint_signature_proto__free_unpacked
                     (Hadoop__Hdfs__CheckpointSignatureProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__NamenodeCommandProto methods */
void   hadoop__hdfs__namenode_command_proto__init
                     (Hadoop__Hdfs__NamenodeCommandProto         *message);
size_t hadoop__hdfs__namenode_command_proto__get_packed_size
                     (const Hadoop__Hdfs__NamenodeCommandProto   *message);
size_t hadoop__hdfs__namenode_command_proto__pack
                     (const Hadoop__Hdfs__NamenodeCommandProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__namenode_command_proto__pack_to_buffer
                     (const Hadoop__Hdfs__NamenodeCommandProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__NamenodeCommandProto *
       hadoop__hdfs__namenode_command_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__namenode_command_proto__free_unpacked
                     (Hadoop__Hdfs__NamenodeCommandProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__CheckpointCommandProto methods */
void   hadoop__hdfs__checkpoint_command_proto__init
                     (Hadoop__Hdfs__CheckpointCommandProto         *message);
size_t hadoop__hdfs__checkpoint_command_proto__get_packed_size
                     (const Hadoop__Hdfs__CheckpointCommandProto   *message);
size_t hadoop__hdfs__checkpoint_command_proto__pack
                     (const Hadoop__Hdfs__CheckpointCommandProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__checkpoint_command_proto__pack_to_buffer
                     (const Hadoop__Hdfs__CheckpointCommandProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__CheckpointCommandProto *
       hadoop__hdfs__checkpoint_command_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__checkpoint_command_proto__free_unpacked
                     (Hadoop__Hdfs__CheckpointCommandProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__BlockProto methods */
void   hadoop__hdfs__block_proto__init
                     (Hadoop__Hdfs__BlockProto         *message);
size_t hadoop__hdfs__block_proto__get_packed_size
                     (const Hadoop__Hdfs__BlockProto   *message);
size_t hadoop__hdfs__block_proto__pack
                     (const Hadoop__Hdfs__BlockProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__block_proto__pack_to_buffer
                     (const Hadoop__Hdfs__BlockProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__BlockProto *
       hadoop__hdfs__block_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__block_proto__free_unpacked
                     (Hadoop__Hdfs__BlockProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__BlockWithLocationsProto methods */
void   hadoop__hdfs__block_with_locations_proto__init
                     (Hadoop__Hdfs__BlockWithLocationsProto         *message);
size_t hadoop__hdfs__block_with_locations_proto__get_packed_size
                     (const Hadoop__Hdfs__BlockWithLocationsProto   *message);
size_t hadoop__hdfs__block_with_locations_proto__pack
                     (const Hadoop__Hdfs__BlockWithLocationsProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__block_with_locations_proto__pack_to_buffer
                     (const Hadoop__Hdfs__BlockWithLocationsProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__BlockWithLocationsProto *
       hadoop__hdfs__block_with_locations_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__block_with_locations_proto__free_unpacked
                     (Hadoop__Hdfs__BlockWithLocationsProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__BlocksWithLocationsProto methods */
void   hadoop__hdfs__blocks_with_locations_proto__init
                     (Hadoop__Hdfs__BlocksWithLocationsProto         *message);
size_t hadoop__hdfs__blocks_with_locations_proto__get_packed_size
                     (const Hadoop__Hdfs__BlocksWithLocationsProto   *message);
size_t hadoop__hdfs__blocks_with_locations_proto__pack
                     (const Hadoop__Hdfs__BlocksWithLocationsProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__blocks_with_locations_proto__pack_to_buffer
                     (const Hadoop__Hdfs__BlocksWithLocationsProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__BlocksWithLocationsProto *
       hadoop__hdfs__blocks_with_locations_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__blocks_with_locations_proto__free_unpacked
                     (Hadoop__Hdfs__BlocksWithLocationsProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__RemoteEditLogProto methods */
void   hadoop__hdfs__remote_edit_log_proto__init
                     (Hadoop__Hdfs__RemoteEditLogProto         *message);
size_t hadoop__hdfs__remote_edit_log_proto__get_packed_size
                     (const Hadoop__Hdfs__RemoteEditLogProto   *message);
size_t hadoop__hdfs__remote_edit_log_proto__pack
                     (const Hadoop__Hdfs__RemoteEditLogProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__remote_edit_log_proto__pack_to_buffer
                     (const Hadoop__Hdfs__RemoteEditLogProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__RemoteEditLogProto *
       hadoop__hdfs__remote_edit_log_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__remote_edit_log_proto__free_unpacked
                     (Hadoop__Hdfs__RemoteEditLogProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__RemoteEditLogManifestProto methods */
void   hadoop__hdfs__remote_edit_log_manifest_proto__init
                     (Hadoop__Hdfs__RemoteEditLogManifestProto         *message);
size_t hadoop__hdfs__remote_edit_log_manifest_proto__get_packed_size
                     (const Hadoop__Hdfs__RemoteEditLogManifestProto   *message);
size_t hadoop__hdfs__remote_edit_log_manifest_proto__pack
                     (const Hadoop__Hdfs__RemoteEditLogManifestProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__remote_edit_log_manifest_proto__pack_to_buffer
                     (const Hadoop__Hdfs__RemoteEditLogManifestProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__RemoteEditLogManifestProto *
       hadoop__hdfs__remote_edit_log_manifest_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__remote_edit_log_manifest_proto__free_unpacked
                     (Hadoop__Hdfs__RemoteEditLogManifestProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__NamespaceInfoProto methods */
void   hadoop__hdfs__namespace_info_proto__init
                     (Hadoop__Hdfs__NamespaceInfoProto         *message);
size_t hadoop__hdfs__namespace_info_proto__get_packed_size
                     (const Hadoop__Hdfs__NamespaceInfoProto   *message);
size_t hadoop__hdfs__namespace_info_proto__pack
                     (const Hadoop__Hdfs__NamespaceInfoProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__namespace_info_proto__pack_to_buffer
                     (const Hadoop__Hdfs__NamespaceInfoProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__NamespaceInfoProto *
       hadoop__hdfs__namespace_info_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__namespace_info_proto__free_unpacked
                     (Hadoop__Hdfs__NamespaceInfoProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__BlockKeyProto methods */
void   hadoop__hdfs__block_key_proto__init
                     (Hadoop__Hdfs__BlockKeyProto         *message);
size_t hadoop__hdfs__block_key_proto__get_packed_size
                     (const Hadoop__Hdfs__BlockKeyProto   *message);
size_t hadoop__hdfs__block_key_proto__pack
                     (const Hadoop__Hdfs__BlockKeyProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__block_key_proto__pack_to_buffer
                     (const Hadoop__Hdfs__BlockKeyProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__BlockKeyProto *
       hadoop__hdfs__block_key_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__block_key_proto__free_unpacked
                     (Hadoop__Hdfs__BlockKeyProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__ExportedBlockKeysProto methods */
void   hadoop__hdfs__exported_block_keys_proto__init
                     (Hadoop__Hdfs__ExportedBlockKeysProto         *message);
size_t hadoop__hdfs__exported_block_keys_proto__get_packed_size
                     (const Hadoop__Hdfs__ExportedBlockKeysProto   *message);
size_t hadoop__hdfs__exported_block_keys_proto__pack
                     (const Hadoop__Hdfs__ExportedBlockKeysProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__exported_block_keys_proto__pack_to_buffer
                     (const Hadoop__Hdfs__ExportedBlockKeysProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__ExportedBlockKeysProto *
       hadoop__hdfs__exported_block_keys_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__exported_block_keys_proto__free_unpacked
                     (Hadoop__Hdfs__ExportedBlockKeysProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__RecoveringBlockProto methods */
void   hadoop__hdfs__recovering_block_proto__init
                     (Hadoop__Hdfs__RecoveringBlockProto         *message);
size_t hadoop__hdfs__recovering_block_proto__get_packed_size
                     (const Hadoop__Hdfs__RecoveringBlockProto   *message);
size_t hadoop__hdfs__recovering_block_proto__pack
                     (const Hadoop__Hdfs__RecoveringBlockProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__recovering_block_proto__pack_to_buffer
                     (const Hadoop__Hdfs__RecoveringBlockProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__RecoveringBlockProto *
       hadoop__hdfs__recovering_block_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__recovering_block_proto__free_unpacked
                     (Hadoop__Hdfs__RecoveringBlockProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__VersionRequestProto methods */
void   hadoop__hdfs__version_request_proto__init
                     (Hadoop__Hdfs__VersionRequestProto         *message);
size_t hadoop__hdfs__version_request_proto__get_packed_size
                     (const Hadoop__Hdfs__VersionRequestProto   *message);
size_t hadoop__hdfs__version_request_proto__pack
                     (const Hadoop__Hdfs__VersionRequestProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__version_request_proto__pack_to_buffer
                     (const Hadoop__Hdfs__VersionRequestProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__VersionRequestProto *
       hadoop__hdfs__version_request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__version_request_proto__free_unpacked
                     (Hadoop__Hdfs__VersionRequestProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__VersionResponseProto methods */
void   hadoop__hdfs__version_response_proto__init
                     (Hadoop__Hdfs__VersionResponseProto         *message);
size_t hadoop__hdfs__version_response_proto__get_packed_size
                     (const Hadoop__Hdfs__VersionResponseProto   *message);
size_t hadoop__hdfs__version_response_proto__pack
                     (const Hadoop__Hdfs__VersionResponseProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__version_response_proto__pack_to_buffer
                     (const Hadoop__Hdfs__VersionResponseProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__VersionResponseProto *
       hadoop__hdfs__version_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__version_response_proto__free_unpacked
                     (Hadoop__Hdfs__VersionResponseProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__SnapshotInfoProto methods */
void   hadoop__hdfs__snapshot_info_proto__init
                     (Hadoop__Hdfs__SnapshotInfoProto         *message);
size_t hadoop__hdfs__snapshot_info_proto__get_packed_size
                     (const Hadoop__Hdfs__SnapshotInfoProto   *message);
size_t hadoop__hdfs__snapshot_info_proto__pack
                     (const Hadoop__Hdfs__SnapshotInfoProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__snapshot_info_proto__pack_to_buffer
                     (const Hadoop__Hdfs__SnapshotInfoProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__SnapshotInfoProto *
       hadoop__hdfs__snapshot_info_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__snapshot_info_proto__free_unpacked
                     (Hadoop__Hdfs__SnapshotInfoProto *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Hadoop__Hdfs__ExtendedBlockProto_Closure)
                 (const Hadoop__Hdfs__ExtendedBlockProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__DatanodeIDProto_Closure)
                 (const Hadoop__Hdfs__DatanodeIDProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__DatanodeInfosProto_Closure)
                 (const Hadoop__Hdfs__DatanodeInfosProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__DatanodeInfoProto_Closure)
                 (const Hadoop__Hdfs__DatanodeInfoProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__ContentSummaryProto_Closure)
                 (const Hadoop__Hdfs__ContentSummaryProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__CorruptFileBlocksProto_Closure)
                 (const Hadoop__Hdfs__CorruptFileBlocksProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__FsPermissionProto_Closure)
                 (const Hadoop__Hdfs__FsPermissionProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__LocatedBlockProto_Closure)
                 (const Hadoop__Hdfs__LocatedBlockProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__DataEncryptionKeyProto_Closure)
                 (const Hadoop__Hdfs__DataEncryptionKeyProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__LocatedBlocksProto_Closure)
                 (const Hadoop__Hdfs__LocatedBlocksProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__HdfsFileStatusProto_Closure)
                 (const Hadoop__Hdfs__HdfsFileStatusProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__FsServerDefaultsProto_Closure)
                 (const Hadoop__Hdfs__FsServerDefaultsProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__DirectoryListingProto_Closure)
                 (const Hadoop__Hdfs__DirectoryListingProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__SnapshottableDirectoryStatusProto_Closure)
                 (const Hadoop__Hdfs__SnapshottableDirectoryStatusProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__SnapshottableDirectoryListingProto_Closure)
                 (const Hadoop__Hdfs__SnapshottableDirectoryListingProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__SnapshotDiffReportEntryProto_Closure)
                 (const Hadoop__Hdfs__SnapshotDiffReportEntryProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__SnapshotDiffReportProto_Closure)
                 (const Hadoop__Hdfs__SnapshotDiffReportProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__StorageInfoProto_Closure)
                 (const Hadoop__Hdfs__StorageInfoProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__NamenodeRegistrationProto_Closure)
                 (const Hadoop__Hdfs__NamenodeRegistrationProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__CheckpointSignatureProto_Closure)
                 (const Hadoop__Hdfs__CheckpointSignatureProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__NamenodeCommandProto_Closure)
                 (const Hadoop__Hdfs__NamenodeCommandProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__CheckpointCommandProto_Closure)
                 (const Hadoop__Hdfs__CheckpointCommandProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__BlockProto_Closure)
                 (const Hadoop__Hdfs__BlockProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__BlockWithLocationsProto_Closure)
                 (const Hadoop__Hdfs__BlockWithLocationsProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__BlocksWithLocationsProto_Closure)
                 (const Hadoop__Hdfs__BlocksWithLocationsProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__RemoteEditLogProto_Closure)
                 (const Hadoop__Hdfs__RemoteEditLogProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__RemoteEditLogManifestProto_Closure)
                 (const Hadoop__Hdfs__RemoteEditLogManifestProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__NamespaceInfoProto_Closure)
                 (const Hadoop__Hdfs__NamespaceInfoProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__BlockKeyProto_Closure)
                 (const Hadoop__Hdfs__BlockKeyProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__ExportedBlockKeysProto_Closure)
                 (const Hadoop__Hdfs__ExportedBlockKeysProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__RecoveringBlockProto_Closure)
                 (const Hadoop__Hdfs__RecoveringBlockProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__VersionRequestProto_Closure)
                 (const Hadoop__Hdfs__VersionRequestProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__VersionResponseProto_Closure)
                 (const Hadoop__Hdfs__VersionResponseProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__SnapshotInfoProto_Closure)
                 (const Hadoop__Hdfs__SnapshotInfoProto *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    hadoop__hdfs__checksum_type_proto__descriptor;
extern const ProtobufCEnumDescriptor    hadoop__hdfs__replica_state_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__extended_block_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__datanode_idproto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__datanode_infos_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__datanode_info_proto__descriptor;
extern const ProtobufCEnumDescriptor    hadoop__hdfs__datanode_info_proto__admin_state__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__content_summary_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__corrupt_file_blocks_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__fs_permission_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__located_block_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__data_encryption_key_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__located_blocks_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__hdfs_file_status_proto__descriptor;
extern const ProtobufCEnumDescriptor    hadoop__hdfs__hdfs_file_status_proto__file_type__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__fs_server_defaults_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__directory_listing_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__snapshottable_directory_status_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__snapshottable_directory_listing_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__snapshot_diff_report_entry_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__snapshot_diff_report_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__storage_info_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__namenode_registration_proto__descriptor;
extern const ProtobufCEnumDescriptor    hadoop__hdfs__namenode_registration_proto__namenode_role_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__checkpoint_signature_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__namenode_command_proto__descriptor;
extern const ProtobufCEnumDescriptor    hadoop__hdfs__namenode_command_proto__type__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__checkpoint_command_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__block_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__block_with_locations_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__blocks_with_locations_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__remote_edit_log_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__remote_edit_log_manifest_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__namespace_info_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__block_key_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__exported_block_keys_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__recovering_block_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__version_request_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__version_response_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__snapshot_info_proto__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_hdfs_2eproto__INCLUDED */
