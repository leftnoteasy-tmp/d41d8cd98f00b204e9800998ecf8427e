/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_datatransfer_2eproto__INCLUDED
#define PROTOBUF_C_datatransfer_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "Security.pb-c.h"
#include "hdfs.pb-c.h"

typedef struct _Hadoop__Hdfs__DataTransferEncryptorMessageProto Hadoop__Hdfs__DataTransferEncryptorMessageProto;
typedef struct _Hadoop__Hdfs__BaseHeaderProto Hadoop__Hdfs__BaseHeaderProto;
typedef struct _Hadoop__Hdfs__ClientOperationHeaderProto Hadoop__Hdfs__ClientOperationHeaderProto;
typedef struct _Hadoop__Hdfs__OpReadBlockProto Hadoop__Hdfs__OpReadBlockProto;
typedef struct _Hadoop__Hdfs__ChecksumProto Hadoop__Hdfs__ChecksumProto;
typedef struct _Hadoop__Hdfs__OpWriteBlockProto Hadoop__Hdfs__OpWriteBlockProto;
typedef struct _Hadoop__Hdfs__OpTransferBlockProto Hadoop__Hdfs__OpTransferBlockProto;
typedef struct _Hadoop__Hdfs__OpReplaceBlockProto Hadoop__Hdfs__OpReplaceBlockProto;
typedef struct _Hadoop__Hdfs__OpCopyBlockProto Hadoop__Hdfs__OpCopyBlockProto;
typedef struct _Hadoop__Hdfs__OpBlockChecksumProto Hadoop__Hdfs__OpBlockChecksumProto;
typedef struct _Hadoop__Hdfs__OpRequestShortCircuitAccessProto Hadoop__Hdfs__OpRequestShortCircuitAccessProto;
typedef struct _Hadoop__Hdfs__PacketHeaderProto Hadoop__Hdfs__PacketHeaderProto;
typedef struct _Hadoop__Hdfs__PipelineAckProto Hadoop__Hdfs__PipelineAckProto;
typedef struct _Hadoop__Hdfs__ReadOpChecksumInfoProto Hadoop__Hdfs__ReadOpChecksumInfoProto;
typedef struct _Hadoop__Hdfs__BlockOpResponseProto Hadoop__Hdfs__BlockOpResponseProto;
typedef struct _Hadoop__Hdfs__ClientReadStatusProto Hadoop__Hdfs__ClientReadStatusProto;
typedef struct _Hadoop__Hdfs__DNTransferAckProto Hadoop__Hdfs__DNTransferAckProto;
typedef struct _Hadoop__Hdfs__OpBlockChecksumResponseProto Hadoop__Hdfs__OpBlockChecksumResponseProto;


/* --- enums --- */

typedef enum _Hadoop__Hdfs__DataTransferEncryptorMessageProto__DataTransferEncryptorStatus {
  HADOOP__HDFS__DATA_TRANSFER_ENCRYPTOR_MESSAGE_PROTO__DATA_TRANSFER_ENCRYPTOR_STATUS__SUCCESS = 0,
  HADOOP__HDFS__DATA_TRANSFER_ENCRYPTOR_MESSAGE_PROTO__DATA_TRANSFER_ENCRYPTOR_STATUS__ERROR_UNKNOWN_KEY = 1,
  HADOOP__HDFS__DATA_TRANSFER_ENCRYPTOR_MESSAGE_PROTO__DATA_TRANSFER_ENCRYPTOR_STATUS__ERROR = 2
} Hadoop__Hdfs__DataTransferEncryptorMessageProto__DataTransferEncryptorStatus;
typedef enum _Hadoop__Hdfs__OpWriteBlockProto__BlockConstructionStage {
  HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__BLOCK_CONSTRUCTION_STAGE__PIPELINE_SETUP_APPEND = 0,
  HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__BLOCK_CONSTRUCTION_STAGE__PIPELINE_SETUP_APPEND_RECOVERY = 1,
  HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__BLOCK_CONSTRUCTION_STAGE__DATA_STREAMING = 2,
  HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__BLOCK_CONSTRUCTION_STAGE__PIPELINE_SETUP_STREAMING_RECOVERY = 3,
  HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__BLOCK_CONSTRUCTION_STAGE__PIPELINE_CLOSE = 4,
  HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__BLOCK_CONSTRUCTION_STAGE__PIPELINE_CLOSE_RECOVERY = 5,
  HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__BLOCK_CONSTRUCTION_STAGE__PIPELINE_SETUP_CREATE = 6,
  HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__BLOCK_CONSTRUCTION_STAGE__TRANSFER_RBW = 7,
  HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__BLOCK_CONSTRUCTION_STAGE__TRANSFER_FINALIZED = 8
} Hadoop__Hdfs__OpWriteBlockProto__BlockConstructionStage;
typedef enum _Hadoop__Hdfs__Status {
  HADOOP__HDFS__STATUS__SUCCESS = 0,
  HADOOP__HDFS__STATUS__ERROR = 1,
  HADOOP__HDFS__STATUS__ERROR_CHECKSUM = 2,
  HADOOP__HDFS__STATUS__ERROR_INVALID = 3,
  HADOOP__HDFS__STATUS__ERROR_EXISTS = 4,
  HADOOP__HDFS__STATUS__ERROR_ACCESS_TOKEN = 5,
  HADOOP__HDFS__STATUS__CHECKSUM_OK = 6,
  HADOOP__HDFS__STATUS__ERROR_UNSUPPORTED = 7
} Hadoop__Hdfs__Status;

/* --- messages --- */

struct  _Hadoop__Hdfs__DataTransferEncryptorMessageProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__DataTransferEncryptorMessageProto__DataTransferEncryptorStatus status;
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  char *message;
};
#define HADOOP__HDFS__DATA_TRANSFER_ENCRYPTOR_MESSAGE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__data_transfer_encryptor_message_proto__descriptor) \
    , 0, 0,{0,NULL}, NULL }


struct  _Hadoop__Hdfs__BaseHeaderProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__ExtendedBlockProto *block;
  Hadoop__Common__TokenProto *token;
};
#define HADOOP__HDFS__BASE_HEADER_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__base_header_proto__descriptor) \
    , NULL, NULL }


struct  _Hadoop__Hdfs__ClientOperationHeaderProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__BaseHeaderProto *baseheader;
  char *clientname;
};
#define HADOOP__HDFS__CLIENT_OPERATION_HEADER_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__client_operation_header_proto__descriptor) \
    , NULL, NULL }


struct  _Hadoop__Hdfs__OpReadBlockProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__ClientOperationHeaderProto *header;
  uint64_t offset;
  uint64_t len;
  protobuf_c_boolean has_sendchecksums;
  protobuf_c_boolean sendchecksums;
};
#define HADOOP__HDFS__OP_READ_BLOCK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__op_read_block_proto__descriptor) \
    , NULL, 0, 0, 0,1 }


struct  _Hadoop__Hdfs__ChecksumProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__ChecksumTypeProto type;
  uint32_t bytesperchecksum;
};
#define HADOOP__HDFS__CHECKSUM_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__checksum_proto__descriptor) \
    , 0, 0 }


struct  _Hadoop__Hdfs__OpWriteBlockProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__ClientOperationHeaderProto *header;
  size_t n_targets;
  Hadoop__Hdfs__DatanodeInfoProto **targets;
  Hadoop__Hdfs__DatanodeInfoProto *source;
  Hadoop__Hdfs__OpWriteBlockProto__BlockConstructionStage stage;
  uint32_t pipelinesize;
  uint64_t minbytesrcvd;
  uint64_t maxbytesrcvd;
  uint64_t latestgenerationstamp;
  Hadoop__Hdfs__ChecksumProto *requestedchecksum;
};
#define HADOOP__HDFS__OP_WRITE_BLOCK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__op_write_block_proto__descriptor) \
    , NULL, 0,NULL, NULL, 0, 0, 0, 0, 0, NULL }


struct  _Hadoop__Hdfs__OpTransferBlockProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__ClientOperationHeaderProto *header;
  size_t n_targets;
  Hadoop__Hdfs__DatanodeInfoProto **targets;
};
#define HADOOP__HDFS__OP_TRANSFER_BLOCK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__op_transfer_block_proto__descriptor) \
    , NULL, 0,NULL }


struct  _Hadoop__Hdfs__OpReplaceBlockProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__BaseHeaderProto *header;
  char *delhint;
  Hadoop__Hdfs__DatanodeInfoProto *source;
};
#define HADOOP__HDFS__OP_REPLACE_BLOCK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__op_replace_block_proto__descriptor) \
    , NULL, NULL, NULL }


struct  _Hadoop__Hdfs__OpCopyBlockProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__BaseHeaderProto *header;
};
#define HADOOP__HDFS__OP_COPY_BLOCK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__op_copy_block_proto__descriptor) \
    , NULL }


struct  _Hadoop__Hdfs__OpBlockChecksumProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__BaseHeaderProto *header;
};
#define HADOOP__HDFS__OP_BLOCK_CHECKSUM_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__op_block_checksum_proto__descriptor) \
    , NULL }


struct  _Hadoop__Hdfs__OpRequestShortCircuitAccessProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__BaseHeaderProto *header;
  uint32_t maxversion;
};
#define HADOOP__HDFS__OP_REQUEST_SHORT_CIRCUIT_ACCESS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__op_request_short_circuit_access_proto__descriptor) \
    , NULL, 0 }


struct  _Hadoop__Hdfs__PacketHeaderProto
{
  ProtobufCMessage base;
  int64_t offsetinblock;
  int64_t seqno;
  protobuf_c_boolean lastpacketinblock;
  int32_t datalen;
  protobuf_c_boolean has_syncblock;
  protobuf_c_boolean syncblock;
};
#define HADOOP__HDFS__PACKET_HEADER_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__packet_header_proto__descriptor) \
    , 0, 0, 0, 0, 0,0 }


struct  _Hadoop__Hdfs__PipelineAckProto
{
  ProtobufCMessage base;
  int64_t seqno;
  size_t n_status;
  Hadoop__Hdfs__Status *status;
  protobuf_c_boolean has_downstreamacktimenanos;
  uint64_t downstreamacktimenanos;
};
#define HADOOP__HDFS__PIPELINE_ACK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__pipeline_ack_proto__descriptor) \
    , 0, 0,NULL, 0,0 }


struct  _Hadoop__Hdfs__ReadOpChecksumInfoProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__ChecksumProto *checksum;
  uint64_t chunkoffset;
};
#define HADOOP__HDFS__READ_OP_CHECKSUM_INFO_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__read_op_checksum_info_proto__descriptor) \
    , NULL, 0 }


struct  _Hadoop__Hdfs__BlockOpResponseProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__Status status;
  char *firstbadlink;
  Hadoop__Hdfs__OpBlockChecksumResponseProto *checksumresponse;
  Hadoop__Hdfs__ReadOpChecksumInfoProto *readopchecksuminfo;
  char *message;
  protobuf_c_boolean has_shortcircuitaccessversion;
  uint32_t shortcircuitaccessversion;
};
#define HADOOP__HDFS__BLOCK_OP_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__block_op_response_proto__descriptor) \
    , 0, NULL, NULL, NULL, NULL, 0,0 }


struct  _Hadoop__Hdfs__ClientReadStatusProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__Status status;
};
#define HADOOP__HDFS__CLIENT_READ_STATUS_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__client_read_status_proto__descriptor) \
    , 0 }


struct  _Hadoop__Hdfs__DNTransferAckProto
{
  ProtobufCMessage base;
  Hadoop__Hdfs__Status status;
};
#define HADOOP__HDFS__DNTRANSFER_ACK_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__dntransfer_ack_proto__descriptor) \
    , 0 }


struct  _Hadoop__Hdfs__OpBlockChecksumResponseProto
{
  ProtobufCMessage base;
  uint32_t bytespercrc;
  uint64_t crcperblock;
  ProtobufCBinaryData md5;
  protobuf_c_boolean has_crctype;
  Hadoop__Hdfs__ChecksumTypeProto crctype;
};
#define HADOOP__HDFS__OP_BLOCK_CHECKSUM_RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hadoop__hdfs__op_block_checksum_response_proto__descriptor) \
    , 0, 0, {0,NULL}, 0,0 }


/* Hadoop__Hdfs__DataTransferEncryptorMessageProto methods */
void   hadoop__hdfs__data_transfer_encryptor_message_proto__init
                     (Hadoop__Hdfs__DataTransferEncryptorMessageProto         *message);
size_t hadoop__hdfs__data_transfer_encryptor_message_proto__get_packed_size
                     (const Hadoop__Hdfs__DataTransferEncryptorMessageProto   *message);
size_t hadoop__hdfs__data_transfer_encryptor_message_proto__pack
                     (const Hadoop__Hdfs__DataTransferEncryptorMessageProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__data_transfer_encryptor_message_proto__pack_to_buffer
                     (const Hadoop__Hdfs__DataTransferEncryptorMessageProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__DataTransferEncryptorMessageProto *
       hadoop__hdfs__data_transfer_encryptor_message_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__data_transfer_encryptor_message_proto__free_unpacked
                     (Hadoop__Hdfs__DataTransferEncryptorMessageProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__BaseHeaderProto methods */
void   hadoop__hdfs__base_header_proto__init
                     (Hadoop__Hdfs__BaseHeaderProto         *message);
size_t hadoop__hdfs__base_header_proto__get_packed_size
                     (const Hadoop__Hdfs__BaseHeaderProto   *message);
size_t hadoop__hdfs__base_header_proto__pack
                     (const Hadoop__Hdfs__BaseHeaderProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__base_header_proto__pack_to_buffer
                     (const Hadoop__Hdfs__BaseHeaderProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__BaseHeaderProto *
       hadoop__hdfs__base_header_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__base_header_proto__free_unpacked
                     (Hadoop__Hdfs__BaseHeaderProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__ClientOperationHeaderProto methods */
void   hadoop__hdfs__client_operation_header_proto__init
                     (Hadoop__Hdfs__ClientOperationHeaderProto         *message);
size_t hadoop__hdfs__client_operation_header_proto__get_packed_size
                     (const Hadoop__Hdfs__ClientOperationHeaderProto   *message);
size_t hadoop__hdfs__client_operation_header_proto__pack
                     (const Hadoop__Hdfs__ClientOperationHeaderProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__client_operation_header_proto__pack_to_buffer
                     (const Hadoop__Hdfs__ClientOperationHeaderProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__ClientOperationHeaderProto *
       hadoop__hdfs__client_operation_header_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__client_operation_header_proto__free_unpacked
                     (Hadoop__Hdfs__ClientOperationHeaderProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__OpReadBlockProto methods */
void   hadoop__hdfs__op_read_block_proto__init
                     (Hadoop__Hdfs__OpReadBlockProto         *message);
size_t hadoop__hdfs__op_read_block_proto__get_packed_size
                     (const Hadoop__Hdfs__OpReadBlockProto   *message);
size_t hadoop__hdfs__op_read_block_proto__pack
                     (const Hadoop__Hdfs__OpReadBlockProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__op_read_block_proto__pack_to_buffer
                     (const Hadoop__Hdfs__OpReadBlockProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__OpReadBlockProto *
       hadoop__hdfs__op_read_block_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__op_read_block_proto__free_unpacked
                     (Hadoop__Hdfs__OpReadBlockProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__ChecksumProto methods */
void   hadoop__hdfs__checksum_proto__init
                     (Hadoop__Hdfs__ChecksumProto         *message);
size_t hadoop__hdfs__checksum_proto__get_packed_size
                     (const Hadoop__Hdfs__ChecksumProto   *message);
size_t hadoop__hdfs__checksum_proto__pack
                     (const Hadoop__Hdfs__ChecksumProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__checksum_proto__pack_to_buffer
                     (const Hadoop__Hdfs__ChecksumProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__ChecksumProto *
       hadoop__hdfs__checksum_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__checksum_proto__free_unpacked
                     (Hadoop__Hdfs__ChecksumProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__OpWriteBlockProto methods */
void   hadoop__hdfs__op_write_block_proto__init
                     (Hadoop__Hdfs__OpWriteBlockProto         *message);
size_t hadoop__hdfs__op_write_block_proto__get_packed_size
                     (const Hadoop__Hdfs__OpWriteBlockProto   *message);
size_t hadoop__hdfs__op_write_block_proto__pack
                     (const Hadoop__Hdfs__OpWriteBlockProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__op_write_block_proto__pack_to_buffer
                     (const Hadoop__Hdfs__OpWriteBlockProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__OpWriteBlockProto *
       hadoop__hdfs__op_write_block_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__op_write_block_proto__free_unpacked
                     (Hadoop__Hdfs__OpWriteBlockProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__OpTransferBlockProto methods */
void   hadoop__hdfs__op_transfer_block_proto__init
                     (Hadoop__Hdfs__OpTransferBlockProto         *message);
size_t hadoop__hdfs__op_transfer_block_proto__get_packed_size
                     (const Hadoop__Hdfs__OpTransferBlockProto   *message);
size_t hadoop__hdfs__op_transfer_block_proto__pack
                     (const Hadoop__Hdfs__OpTransferBlockProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__op_transfer_block_proto__pack_to_buffer
                     (const Hadoop__Hdfs__OpTransferBlockProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__OpTransferBlockProto *
       hadoop__hdfs__op_transfer_block_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__op_transfer_block_proto__free_unpacked
                     (Hadoop__Hdfs__OpTransferBlockProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__OpReplaceBlockProto methods */
void   hadoop__hdfs__op_replace_block_proto__init
                     (Hadoop__Hdfs__OpReplaceBlockProto         *message);
size_t hadoop__hdfs__op_replace_block_proto__get_packed_size
                     (const Hadoop__Hdfs__OpReplaceBlockProto   *message);
size_t hadoop__hdfs__op_replace_block_proto__pack
                     (const Hadoop__Hdfs__OpReplaceBlockProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__op_replace_block_proto__pack_to_buffer
                     (const Hadoop__Hdfs__OpReplaceBlockProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__OpReplaceBlockProto *
       hadoop__hdfs__op_replace_block_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__op_replace_block_proto__free_unpacked
                     (Hadoop__Hdfs__OpReplaceBlockProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__OpCopyBlockProto methods */
void   hadoop__hdfs__op_copy_block_proto__init
                     (Hadoop__Hdfs__OpCopyBlockProto         *message);
size_t hadoop__hdfs__op_copy_block_proto__get_packed_size
                     (const Hadoop__Hdfs__OpCopyBlockProto   *message);
size_t hadoop__hdfs__op_copy_block_proto__pack
                     (const Hadoop__Hdfs__OpCopyBlockProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__op_copy_block_proto__pack_to_buffer
                     (const Hadoop__Hdfs__OpCopyBlockProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__OpCopyBlockProto *
       hadoop__hdfs__op_copy_block_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__op_copy_block_proto__free_unpacked
                     (Hadoop__Hdfs__OpCopyBlockProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__OpBlockChecksumProto methods */
void   hadoop__hdfs__op_block_checksum_proto__init
                     (Hadoop__Hdfs__OpBlockChecksumProto         *message);
size_t hadoop__hdfs__op_block_checksum_proto__get_packed_size
                     (const Hadoop__Hdfs__OpBlockChecksumProto   *message);
size_t hadoop__hdfs__op_block_checksum_proto__pack
                     (const Hadoop__Hdfs__OpBlockChecksumProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__op_block_checksum_proto__pack_to_buffer
                     (const Hadoop__Hdfs__OpBlockChecksumProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__OpBlockChecksumProto *
       hadoop__hdfs__op_block_checksum_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__op_block_checksum_proto__free_unpacked
                     (Hadoop__Hdfs__OpBlockChecksumProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__OpRequestShortCircuitAccessProto methods */
void   hadoop__hdfs__op_request_short_circuit_access_proto__init
                     (Hadoop__Hdfs__OpRequestShortCircuitAccessProto         *message);
size_t hadoop__hdfs__op_request_short_circuit_access_proto__get_packed_size
                     (const Hadoop__Hdfs__OpRequestShortCircuitAccessProto   *message);
size_t hadoop__hdfs__op_request_short_circuit_access_proto__pack
                     (const Hadoop__Hdfs__OpRequestShortCircuitAccessProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__op_request_short_circuit_access_proto__pack_to_buffer
                     (const Hadoop__Hdfs__OpRequestShortCircuitAccessProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__OpRequestShortCircuitAccessProto *
       hadoop__hdfs__op_request_short_circuit_access_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__op_request_short_circuit_access_proto__free_unpacked
                     (Hadoop__Hdfs__OpRequestShortCircuitAccessProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__PacketHeaderProto methods */
void   hadoop__hdfs__packet_header_proto__init
                     (Hadoop__Hdfs__PacketHeaderProto         *message);
size_t hadoop__hdfs__packet_header_proto__get_packed_size
                     (const Hadoop__Hdfs__PacketHeaderProto   *message);
size_t hadoop__hdfs__packet_header_proto__pack
                     (const Hadoop__Hdfs__PacketHeaderProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__packet_header_proto__pack_to_buffer
                     (const Hadoop__Hdfs__PacketHeaderProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__PacketHeaderProto *
       hadoop__hdfs__packet_header_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__packet_header_proto__free_unpacked
                     (Hadoop__Hdfs__PacketHeaderProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__PipelineAckProto methods */
void   hadoop__hdfs__pipeline_ack_proto__init
                     (Hadoop__Hdfs__PipelineAckProto         *message);
size_t hadoop__hdfs__pipeline_ack_proto__get_packed_size
                     (const Hadoop__Hdfs__PipelineAckProto   *message);
size_t hadoop__hdfs__pipeline_ack_proto__pack
                     (const Hadoop__Hdfs__PipelineAckProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__pipeline_ack_proto__pack_to_buffer
                     (const Hadoop__Hdfs__PipelineAckProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__PipelineAckProto *
       hadoop__hdfs__pipeline_ack_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__pipeline_ack_proto__free_unpacked
                     (Hadoop__Hdfs__PipelineAckProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__ReadOpChecksumInfoProto methods */
void   hadoop__hdfs__read_op_checksum_info_proto__init
                     (Hadoop__Hdfs__ReadOpChecksumInfoProto         *message);
size_t hadoop__hdfs__read_op_checksum_info_proto__get_packed_size
                     (const Hadoop__Hdfs__ReadOpChecksumInfoProto   *message);
size_t hadoop__hdfs__read_op_checksum_info_proto__pack
                     (const Hadoop__Hdfs__ReadOpChecksumInfoProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__read_op_checksum_info_proto__pack_to_buffer
                     (const Hadoop__Hdfs__ReadOpChecksumInfoProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__ReadOpChecksumInfoProto *
       hadoop__hdfs__read_op_checksum_info_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__read_op_checksum_info_proto__free_unpacked
                     (Hadoop__Hdfs__ReadOpChecksumInfoProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__BlockOpResponseProto methods */
void   hadoop__hdfs__block_op_response_proto__init
                     (Hadoop__Hdfs__BlockOpResponseProto         *message);
size_t hadoop__hdfs__block_op_response_proto__get_packed_size
                     (const Hadoop__Hdfs__BlockOpResponseProto   *message);
size_t hadoop__hdfs__block_op_response_proto__pack
                     (const Hadoop__Hdfs__BlockOpResponseProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__block_op_response_proto__pack_to_buffer
                     (const Hadoop__Hdfs__BlockOpResponseProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__BlockOpResponseProto *
       hadoop__hdfs__block_op_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__block_op_response_proto__free_unpacked
                     (Hadoop__Hdfs__BlockOpResponseProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__ClientReadStatusProto methods */
void   hadoop__hdfs__client_read_status_proto__init
                     (Hadoop__Hdfs__ClientReadStatusProto         *message);
size_t hadoop__hdfs__client_read_status_proto__get_packed_size
                     (const Hadoop__Hdfs__ClientReadStatusProto   *message);
size_t hadoop__hdfs__client_read_status_proto__pack
                     (const Hadoop__Hdfs__ClientReadStatusProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__client_read_status_proto__pack_to_buffer
                     (const Hadoop__Hdfs__ClientReadStatusProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__ClientReadStatusProto *
       hadoop__hdfs__client_read_status_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__client_read_status_proto__free_unpacked
                     (Hadoop__Hdfs__ClientReadStatusProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__DNTransferAckProto methods */
void   hadoop__hdfs__dntransfer_ack_proto__init
                     (Hadoop__Hdfs__DNTransferAckProto         *message);
size_t hadoop__hdfs__dntransfer_ack_proto__get_packed_size
                     (const Hadoop__Hdfs__DNTransferAckProto   *message);
size_t hadoop__hdfs__dntransfer_ack_proto__pack
                     (const Hadoop__Hdfs__DNTransferAckProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__dntransfer_ack_proto__pack_to_buffer
                     (const Hadoop__Hdfs__DNTransferAckProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__DNTransferAckProto *
       hadoop__hdfs__dntransfer_ack_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__dntransfer_ack_proto__free_unpacked
                     (Hadoop__Hdfs__DNTransferAckProto *message,
                      ProtobufCAllocator *allocator);
/* Hadoop__Hdfs__OpBlockChecksumResponseProto methods */
void   hadoop__hdfs__op_block_checksum_response_proto__init
                     (Hadoop__Hdfs__OpBlockChecksumResponseProto         *message);
size_t hadoop__hdfs__op_block_checksum_response_proto__get_packed_size
                     (const Hadoop__Hdfs__OpBlockChecksumResponseProto   *message);
size_t hadoop__hdfs__op_block_checksum_response_proto__pack
                     (const Hadoop__Hdfs__OpBlockChecksumResponseProto   *message,
                      uint8_t             *out);
size_t hadoop__hdfs__op_block_checksum_response_proto__pack_to_buffer
                     (const Hadoop__Hdfs__OpBlockChecksumResponseProto   *message,
                      ProtobufCBuffer     *buffer);
Hadoop__Hdfs__OpBlockChecksumResponseProto *
       hadoop__hdfs__op_block_checksum_response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hadoop__hdfs__op_block_checksum_response_proto__free_unpacked
                     (Hadoop__Hdfs__OpBlockChecksumResponseProto *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Hadoop__Hdfs__DataTransferEncryptorMessageProto_Closure)
                 (const Hadoop__Hdfs__DataTransferEncryptorMessageProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__BaseHeaderProto_Closure)
                 (const Hadoop__Hdfs__BaseHeaderProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__ClientOperationHeaderProto_Closure)
                 (const Hadoop__Hdfs__ClientOperationHeaderProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__OpReadBlockProto_Closure)
                 (const Hadoop__Hdfs__OpReadBlockProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__ChecksumProto_Closure)
                 (const Hadoop__Hdfs__ChecksumProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__OpWriteBlockProto_Closure)
                 (const Hadoop__Hdfs__OpWriteBlockProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__OpTransferBlockProto_Closure)
                 (const Hadoop__Hdfs__OpTransferBlockProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__OpReplaceBlockProto_Closure)
                 (const Hadoop__Hdfs__OpReplaceBlockProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__OpCopyBlockProto_Closure)
                 (const Hadoop__Hdfs__OpCopyBlockProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__OpBlockChecksumProto_Closure)
                 (const Hadoop__Hdfs__OpBlockChecksumProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__OpRequestShortCircuitAccessProto_Closure)
                 (const Hadoop__Hdfs__OpRequestShortCircuitAccessProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__PacketHeaderProto_Closure)
                 (const Hadoop__Hdfs__PacketHeaderProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__PipelineAckProto_Closure)
                 (const Hadoop__Hdfs__PipelineAckProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__ReadOpChecksumInfoProto_Closure)
                 (const Hadoop__Hdfs__ReadOpChecksumInfoProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__BlockOpResponseProto_Closure)
                 (const Hadoop__Hdfs__BlockOpResponseProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__ClientReadStatusProto_Closure)
                 (const Hadoop__Hdfs__ClientReadStatusProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__DNTransferAckProto_Closure)
                 (const Hadoop__Hdfs__DNTransferAckProto *message,
                  void *closure_data);
typedef void (*Hadoop__Hdfs__OpBlockChecksumResponseProto_Closure)
                 (const Hadoop__Hdfs__OpBlockChecksumResponseProto *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    hadoop__hdfs__status__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__data_transfer_encryptor_message_proto__descriptor;
extern const ProtobufCEnumDescriptor    hadoop__hdfs__data_transfer_encryptor_message_proto__data_transfer_encryptor_status__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__base_header_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__client_operation_header_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__op_read_block_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__checksum_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__op_write_block_proto__descriptor;
extern const ProtobufCEnumDescriptor    hadoop__hdfs__op_write_block_proto__block_construction_stage__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__op_transfer_block_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__op_replace_block_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__op_copy_block_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__op_block_checksum_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__op_request_short_circuit_access_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__packet_header_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__pipeline_ack_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__read_op_checksum_info_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__block_op_response_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__client_read_status_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__dntransfer_ack_proto__descriptor;
extern const ProtobufCMessageDescriptor hadoop__hdfs__op_block_checksum_response_proto__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_datatransfer_2eproto__INCLUDED */
